<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regularization | Computational Psychology</title>
    <link>http://haines-lab.com/tag/regularization/</link>
      <atom:link href="http://haines-lab.com/tag/regularization/index.xml" rel="self" type="application/rss+xml" />
    <description>Regularization</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2022 Nathaniel Haines, PhD</copyright><lastBuildDate>Mon, 06 May 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://haines-lab.com/media/icon_hu88408da40bfce0858e3c9c463b923e62_76530_512x512_fill_lanczos_center_3.png</url>
      <title>Regularization</title>
      <link>http://haines-lab.com/tag/regularization/</link>
    </image>
    
    <item>
      <title>On the equivalency between frequentist Ridge (and LASSO) regression and hierarchial Bayesian regression</title>
      <link>http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      <guid>http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/</guid>
      <description>
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;http://haines-lab.com/rmarkdown-libs/crosstalk/css/crosstalk.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;http://haines-lab.com/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;http://haines-lab.com/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In this post, we will explore frequentist and Bayesian analogues of &lt;em&gt;regularized/penalized linear regression&lt;/em&gt; models (e.g., LASSO [L1 penalty], Ridge regression [L2 penalty]), which are an extention of traditional linear regression models of the form:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y = \beta_{0}+X\beta + \epsilon\tag{1}\]&lt;/span&gt;
where &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt; is the error, which is normally distributed as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\epsilon \sim  \mathcal{N}(0, \sigma)\tag{2}\]&lt;/span&gt;
Unlike these traditional linear regression models, regularized linear regression models produce &lt;strong&gt;biased estimates&lt;/strong&gt; for the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights. Specifically, both frequentist and Bayesian regularized linear regression models pool information across &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights, resulting in regression toward a common mean. When the common mean is centered at 0, this pooling of information produces more conservative estimates for each &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight (they are biased toward 0). In contrast, traditional linear regression models assume that &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights share no group-level information (i.e. they are independent), which leads to so-called &lt;strong&gt;unbiased estimates&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So then, why are these models—which produce biased estimates—becoming increasingly popular throughout the social and behavioral sciences?&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&#34;learning-objectives&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Learning Objectives&lt;/h2&gt;
&lt;p&gt;The current post seeks to show that we actually want biased estimates in many contexts. In doing so, we will also explore associations between frequentist and Bayesian regularization. Therefore, the &lt;strong&gt;learning objectives&lt;/strong&gt; of the current post are to develop an understanding of:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;why so-called &lt;strong&gt;biased&lt;/strong&gt; estimates are actually good for science,&lt;/li&gt;
&lt;li&gt;the difference between traditional and regularized linear regression models, and&lt;/li&gt;
&lt;li&gt;the correspondence between frequentist regularization and hierarchical Bayesian regression&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data&lt;/h1&gt;
&lt;p&gt;For this post, we will use a college-admissions dataset that is freely available from &lt;a href=&#34;https://www.kaggle.com/mohansacharya/graduate-admissions&#34;&gt;Kaggle&lt;/a&gt;. Make sure to download the .csv file named &lt;code&gt;Admission_Predict_Ver1.1.csv&lt;/code&gt;. This dataset contains 500 observations (i.e. rows) and 9 total variables (i.e. columns). 1 of these columns is a subject ID, which we will note use for modeling. Taken directly from the link:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“The dataset contains several parameters which are considered important during the application for Masters Programs. The parameters included are : 1. GRE Scores ( out of 340 ) 2. TOEFL Scores ( out of 120 ) 3. University Rating ( out of 5 ) 4. Statement of Purpose and Letter of Recommendation Strength ( out of 5 ) 5. Undergraduate GPA ( out of 10 ) 6. Research Experience ( either 0 or 1 ) 7. Chance of Admit ( ranging from 0 to 1 )”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Our goal is to predict the likelihood of being admitted to graduate school (&lt;em&gt;Chance of Admit&lt;/em&gt;), given the other variables, which we will now refer to as &lt;strong&gt;predictors&lt;/strong&gt;.&lt;/p&gt;
&lt;div id=&#34;getting-started&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;First off, let’s load the libraries that we will use:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# For traditional LASSO/Ridge regression
library(glmnet)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;glmnet&amp;#39; was built under R version 4.1.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# For Bayesian modeling
library(rstan)
# For data wrangling/plotting
library(dplyr)
library(tidyr)
library(foreach)
library(ggplot2)
library(bayesplot) # Visualizing posteriors 
library(akima)     # for 3D plotting&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;akima&amp;#39; was built under R version 4.1.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plotly)    # for 3D plotting&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;plotly&amp;#39; was built under R version 4.1.1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we need to read in the data. Assuming that you have already downloaded the data from the link above, we can read it into R as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# I was lazy and just left this in the downloads folder...
grad_dat &amp;lt;- read.csv(&amp;quot;~/Downloads/Admission_Predict_Ver1.1.csv&amp;quot;)

# View first few observations 
tbl_df(grad_dat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `tbl_df()` was deprecated in dplyr 1.0.0.
## Please use `tibble::as_tibble()` instead.
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_warnings()` to see where this warning was generated.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 500 × 9
##    Serial.No. GRE.Score TOEFL.Score University.Rating   SOP   LOR  CGPA Research
##         &amp;lt;int&amp;gt;     &amp;lt;int&amp;gt;       &amp;lt;int&amp;gt;             &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;
##  1          1       337         118                 4   4.5   4.5  9.65        1
##  2          2       324         107                 4   4     4.5  8.87        1
##  3          3       316         104                 3   3     3.5  8           1
##  4          4       322         110                 3   3.5   2.5  8.67        1
##  5          5       314         103                 2   2     3    8.21        0
##  6          6       330         115                 5   4.5   3    9.34        1
##  7          7       321         109                 3   3     4    8.2         1
##  8          8       308         101                 2   3     4    7.9         0
##  9          9       302         102                 1   2     1.5  8           0
## 10         10       323         108                 3   3.5   3    8.6         0
## # … with 490 more rows, and 1 more variable: Chance.of.Admit &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-training-and-test-sets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Creating Training and Test Sets&lt;/h2&gt;
&lt;p&gt;Before really looking at the data, we need to separate out the training and testing portions. The original competition version of data uploaded to Kaggle only included the first 400 observations, and competitors had to make predictions on the remaining 100 observations before the actual outcomes (i.e. likelihood of getting into graduate school) were released.&lt;/p&gt;
&lt;p&gt;To show off the benefits of regularized over traditional methods, we will only train our models on &lt;strong&gt;the first 20 observations, and make predictions on the remaining 480&lt;/strong&gt;. In these low data settings—which are common to many areas of social and behavioral science (e.g., psychology, neuroscience, human ecology, etc.)—regularized regression models show clear advantages over traditional regression models. In fact, I will go as far as claiming that &lt;strong&gt;regularized models should be the default choice in most areas of science&lt;/strong&gt;, and the following examples should explain why.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Training data (used to fit model)
train_dat &amp;lt;- grad_dat[1:20,] # Only first 20 for training

# Testing data (used to test model generalizability)
test_dat &amp;lt;- grad_dat[21:500,] # Testing on the rest&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have the data read in and separated, it would be useful to visualize our training data to get a sense of what we are working with. A correlation matrix should do a good job here:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Plotting correlation matrix
cor(train_dat) %&amp;gt;%
  as.data.frame() %&amp;gt;%
  mutate(Var1 = factor(row.names(.), levels=row.names(.))) %&amp;gt;% # For nice order
  gather(Var2, Correlation, 1:9) %&amp;gt;%
  ggplot(aes(reorder(Var2, Correlation), # Reorder to visualize
             reorder(Var1, -Correlation), fill = Correlation)) +
  geom_tile() +
  scale_fill_continuous(type = &amp;quot;viridis&amp;quot;) +
  xlab(&amp;quot;Variable&amp;quot;) +
  ylab(&amp;quot;Variable&amp;quot;) +
  theme_minimal(base_size = 15) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig0-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;This correlation matrix shows us that &lt;code&gt;Serial.No&lt;/code&gt; is not really correlated with any of the other 8 variables. This makes sense, given that &lt;code&gt;Serial.No&lt;/code&gt; is the subject ID (we will not use that in our models). Otherwise, it appears that there is a moderate amount of collinearity amoung the predictor and outcome variables.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;traditional-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Traditional Regression&lt;/h2&gt;
&lt;p&gt;Traditional linear regression models seek to mimimize the squared error between predicted and actual observations. Formally, we can represent this with a &lt;em&gt;loss function&lt;/em&gt; of the following form:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\underset{\boldsymbol{\beta}}{argmin}\sum_{i=1}^{n}(y_{i} - \beta_{0} - \sum_{j=1}^{p}\beta_{j}x_{ij})^2\tag{3}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(y_{i}\)&lt;/span&gt; is the outcome variable (probability of acceptance in our example) for observation &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; is the total number of observations (20 students in our training data example), &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; is the number of predictors (7 in our example), &lt;span class=&#34;math inline&#34;&gt;\(\beta_{0}\)&lt;/span&gt; is the intercept of the model, and &lt;span class=&#34;math inline&#34;&gt;\(\beta_{1,2,...,j}\)&lt;/span&gt; are the weights (i.e. slopes) for each of the &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; predictor variables. Under the assumption of normality, both ordinary least squares and maximum likelihood estimation of &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights in equation 3 will offer the same results—from here on, we will refer to these methods of minimizing equation 3 as &lt;em&gt;traditional linear regression&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Below, we will fit a traditional linear regression model on the training set (which contains 20 observations total), and we will see how well it predicts the graduate school acceptance probability (&lt;span class=&#34;math inline&#34;&gt;\(\text{Pr}(Acceptance)\)&lt;/span&gt;) for each of the remaining 480 observations. We begin by scaling all variables—that is, we mean-center and divide each column by its own standard deviation (SD). Then, we apply the same standardization to the test data, followed by fitting the traditional model and making test-set predictions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Scale training data (and get rid of ID)
train_scale &amp;lt;- scale(train_dat[,2:9])

# Find means and SDs of training data variables
means &amp;lt;- attributes(train_scale)$`scaled:center`
SDs &amp;lt;- attributes(train_scale)$`scaled:scale`

# Scale test data using training data summary stats (no cheating!)
test_scale &amp;lt;- scale(test_dat[,-1], center = means, scale = SDs)

# Fit linear regression
fit_lr &amp;lt;- lm(Chance.of.Admit ~ ., data = as.data.frame(train_scale))

# Generate test-set predictions with linear regression
y_pred_lr &amp;lt;- predict(fit_lr, newdata = as.data.frame(test_scale[,-8]))

# Plot cor(predicted, actual)
qplot(x = y_pred_lr, y = test_scale[,8],
      main = paste0(&amp;quot;Traditional Linear Regression\n&amp;quot;, 
                    &amp;quot;r = &amp;quot;, round(cor(test_scale[,8], y_pred_lr), 2))) +
  xlab(&amp;quot;Model Predicted Pr(Acceptance)&amp;quot;) +
  ylab(&amp;quot;Actual Pr(Acceptance)&amp;quot;) +
  theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig1-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Wow, not bad at all! Even with only 20 observations, the correlation between predicted and actual probability of acceptance for the remaining 480 observations is $r = $ &lt;span class=&#34;math inline&#34;&gt;\(0.76\)&lt;/span&gt;. This suggests that probability of acceptance is rather well described as a simple linear combination of the predictors.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;regularized-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Regularized Regression&lt;/h2&gt;
&lt;p&gt;As described above, regularized linear regression models aim to estimate more conservative values for the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights in a model, and this is true for both frequentist and Bayesian versions of regularization. While there are many methods that can be used to regularize your estimation procedure, we will focus specifically on two popular forms—namely, ridge and LASSO regression. We start below by describing each regression generally, and then proceed to implement both the frequentist and Bayesian versions.&lt;/p&gt;
&lt;div id=&#34;ridge-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Ridge Regression&lt;/h3&gt;
&lt;p&gt;The extention from traditional to ridge regression is actually very straightforward! Specifically, we modify the loss function (equation 3) to include a &lt;strong&gt;penalty term&lt;/strong&gt; for model complexity, where model complexity is operationalized as the sum of squared &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\underbrace{\underset{\boldsymbol{\beta}}{argmin}\sum_{i=1}^{n}(y_{i} - \beta_{0} - \sum_{j=1}^{p}\beta_{j}x_{ij})^2}_{\text{Traditional Loss Function}} + \underbrace{\lambda\sum_{j=1}^{p}\beta_{j}^2}_{\text{Ridge Penalty}}\tag{4}\]&lt;/span&gt;
Here, &lt;span class=&#34;math inline&#34;&gt;\(\lambda~(0&amp;lt;\lambda&amp;lt;\infty)\)&lt;/span&gt; is a penalty parameter, which controls how much regularization we would like in the model. To gain an intuition for the behavior of this model, think of what happens at the very extremes of &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;. For example, when &lt;span class=&#34;math inline&#34;&gt;\(\lambda = 0\)&lt;/span&gt;, what happens to equation 4? Well, the model simply reduces to equation 3, and we are back to traditional regression! What about as &lt;span class=&#34;math inline&#34;&gt;\(\lambda \rightarrow \infty\)&lt;/span&gt;? In that case, any non-zero values for &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; will lead to an infinitely large penalty—then, the only solution to equation 4 is for all &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights to be equal to 0, indicating no learning from the data at all.&lt;/p&gt;
&lt;p&gt;Therefore, we can think of &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; as a parameter that &lt;strong&gt;controls how much we learn from the data&lt;/strong&gt;, with smaller and larger values leading to more and less learning, respectively. Note that parameters that control how much we learn from data are typically called &lt;strong&gt;hyper-parameters&lt;/strong&gt;. Framed in these terms, we can view traditional regression methods as those that maximally learn from the data, and regularized regression models as those that restrict learning from the data. It is in this way that traditional regression produces &lt;em&gt;unbiased&lt;/em&gt; estimate of the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights. That is, &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights are unbiased with respect to the information available in the training data. However, when data are noisy (i.e. contain large amounts of variability), such &lt;em&gt;unbiased&lt;/em&gt; estimates will be unduly influenced by noise. Thus, although traditional regression offers &lt;em&gt;unbiased&lt;/em&gt; estimates, it is also succeptable to estimating large magnitude &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights based purely on noise within the data. Ridge regression minimizes the potential learning from noise by penalizing the model for the squared sum of all the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights. The squaring of the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights encodes our knowledge that large-magnitude &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights are much less likely than small-magnitude &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights (given that all our variables are on the same scale after standardization). Practically, this means that if a traditional regression would give us a very large magnitude &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight, when data are highly variable, ridge regression will &lt;em&gt;bias such large &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; estimates toward 0&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We can actually visualize the effects of the ridge penalty on &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights by plotting out the ridge penalty from equation 4. Specifically, the below plot shows the resulting penalty (where 0 is no penalty and increasingly negative numbers are stronger penalties) for the 2-dimensional case, where we only have 2 predictors. Importantly, the plot also includes the penalty functions for varying settings of &lt;span class=&#34;math inline&#34;&gt;\(\lambda \in \{0, .5, 1.5\}\)&lt;/span&gt;. Note that the flat surface is when &lt;span class=&#34;math inline&#34;&gt;\(\lambda = 0\)&lt;/span&gt;, which leads to no penalization.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;15060540265fc&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;15060540265fc&#34;,&#34;attrs&#34;:{&#34;15060540265fc&#34;:{&#34;showscale&#34;:false,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;z&#34;:{},&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;opacity&#34;:0.5,&#34;inherit&#34;:true},&#34;15060540265fc.1&#34;:{&#34;showscale&#34;:false,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;z&#34;:{},&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;inherit&#34;:true},&#34;15060540265fc.2&#34;:{&#34;showscale&#34;:false,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;z&#34;:{},&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;inherit&#34;:true}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;scene&#34;:{&#34;xaxis&#34;:{&#34;title&#34;:&#34;Beta_1&#34;},&#34;yaxis&#34;:{&#34;title&#34;:&#34;Beta_2&#34;},&#34;zaxis&#34;:{&#34;title&#34;:&#34;Penalty&#34;}},&#34;title&#34;:&#34;Ridge Penalty Contour&#34;,&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:true},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[&#34;hoverclosest&#34;,&#34;hovercompare&#34;],&#34;showSendToCloud&#34;:false},&#34;data&#34;:[{&#34;colorbar&#34;:{&#34;title&#34;:&#34;ridge_p1$z&lt;br /&gt;ridge_p2$z&lt;br /&gt;ridge_p3$z&#34;,&#34;ticklen&#34;:2},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(68,1,84,1)&#34;],[&#34;0.0416666666666667&#34;,&#34;rgba(70,19,97,1)&#34;],[&#34;0.0833333333333333&#34;,&#34;rgba(72,32,111,1)&#34;],[&#34;0.125&#34;,&#34;rgba(71,45,122,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(68,58,128,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(64,70,135,1)&#34;],[&#34;0.25&#34;,&#34;rgba(60,82,138,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(56,93,140,1)&#34;],[&#34;0.333333333333333&#34;,&#34;rgba(49,104,142,1)&#34;],[&#34;0.375&#34;,&#34;rgba(46,114,142,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(42,123,142,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(38,133,141,1)&#34;],[&#34;0.5&#34;,&#34;rgba(37,144,140,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(33,154,138,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(39,164,133,1)&#34;],[&#34;0.625&#34;,&#34;rgba(47,174,127,1)&#34;],[&#34;0.666666666666667&#34;,&#34;rgba(53,183,121,1)&#34;],[&#34;0.708333333333333&#34;,&#34;rgba(79,191,110,1)&#34;],[&#34;0.75&#34;,&#34;rgba(98,199,98,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(119,207,85,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(147,214,70,1)&#34;],[&#34;0.875&#34;,&#34;rgba(172,220,52,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(199,225,42,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(226,228,40,1)&#34;],[&#34;1&#34;,&#34;rgba(253,231,37,1)&#34;]],&#34;showscale&#34;:false,&#34;z&#34;:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,null,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,null,null,null,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,0,0,0,0]],&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;opacity&#34;:0.5,&#34;frame&#34;:null},{&#34;colorbar&#34;:{&#34;title&#34;:&#34;ridge_p1$z&lt;br /&gt;ridge_p2$z&lt;br /&gt;ridge_p3$z&#34;,&#34;ticklen&#34;:2},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(68,1,84,1)&#34;],[&#34;0.0416666666666667&#34;,&#34;rgba(70,19,97,1)&#34;],[&#34;0.0833333333333333&#34;,&#34;rgba(72,32,111,1)&#34;],[&#34;0.125&#34;,&#34;rgba(71,45,122,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(68,58,128,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(64,70,135,1)&#34;],[&#34;0.25&#34;,&#34;rgba(60,82,138,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(56,93,140,1)&#34;],[&#34;0.333333333333333&#34;,&#34;rgba(49,104,142,1)&#34;],[&#34;0.375&#34;,&#34;rgba(46,114,142,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(42,123,142,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(38,133,141,1)&#34;],[&#34;0.5&#34;,&#34;rgba(37,144,140,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(33,154,138,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(39,164,133,1)&#34;],[&#34;0.625&#34;,&#34;rgba(47,174,127,1)&#34;],[&#34;0.666666666666667&#34;,&#34;rgba(53,183,121,1)&#34;],[&#34;0.708333333333333&#34;,&#34;rgba(79,191,110,1)&#34;],[&#34;0.75&#34;,&#34;rgba(98,199,98,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(119,207,85,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(147,214,70,1)&#34;],[&#34;0.875&#34;,&#34;rgba(172,220,52,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(199,225,42,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(226,228,40,1)&#34;],[&#34;1&#34;,&#34;rgba(253,231,37,1)&#34;]],&#34;showscale&#34;:false,&#34;z&#34;:[[9,8.55038461538462,8.12442307692308,7.72211538461538,7.34346153846154,6.98846153846154,6.65711538461538,6.34942307692308,6.06538461538462,5.805,5.56826923076923,5.35519230769231,5.16576923076923,5,4.85807692307692,4.73980769230769,4.64519230769231,4.57423076923077,4.52692307692308,4.50326923076923,4.50326923076923,4.52692307692308,4.57423076923077,4.64519230769231,4.73980769230769,4.85807692307692,5,5.16576923076923,5.35519230769231,5.56826923076923,5.805,6.06538461538462,6.34942307692308,6.65711538461539,6.98846153846154,7.34346153846154,7.72211538461538,8.12442307692308,8.55038461538462,9],[8.55038461538462,8.10076923076923,7.67480769230769,7.2725,6.89384615384615,6.53884615384615,6.2075,5.89980769230769,5.61576923076923,5.35538461538462,5.11865384615385,4.90557692307692,4.71615384615385,4.55038461538462,4.40846153846154,4.29019230769231,4.19557692307692,4.12461538461539,4.07730769230769,4.05365384615385,4.05365384615385,4.07730769230769,4.12461538461539,4.19557692307692,4.29019230769231,4.40846153846154,4.55038461538462,4.71615384615385,4.90557692307692,5.11865384615385,5.35538461538462,5.61576923076923,5.89980769230769,6.2075,6.53884615384615,6.89384615384616,7.2725,7.67480769230769,8.10076923076923,8.55038461538462],[8.12442307692308,7.67480769230769,7.24884615384615,6.84653846153846,6.46788461538462,6.11288461538462,5.78153846153846,5.47384615384615,5.18980769230769,4.92942307692308,4.69269230769231,4.47961538461538,4.29019230769231,4.12442307692308,3.9825,3.86423076923077,3.76961538461539,3.69865384615385,3.65134615384615,3.62769230769231,3.62769230769231,3.65134615384615,3.69865384615385,3.76961538461539,3.86423076923077,3.9825,4.12442307692308,4.29019230769231,4.47961538461539,4.69269230769231,4.92942307692308,5.18980769230769,5.47384615384616,5.78153846153846,6.11288461538462,6.46788461538462,6.84653846153846,7.24884615384615,7.67480769230769,8.12442307692308],[7.72211538461538,7.2725,6.84653846153846,6.44423076923077,6.06557692307692,5.71057692307692,5.37923076923077,5.07153846153846,4.7875,4.52711538461539,4.29038461538462,4.07730769230769,3.88788461538461,3.72211538461538,3.58019230769231,3.46192307692308,3.36730769230769,3.29634615384615,3.24903846153846,3.22538461538462,3.22538461538462,3.24903846153846,3.29634615384615,3.36730769230769,3.46192307692308,3.58019230769231,3.72211538461538,3.88788461538462,4.07730769230769,4.29038461538462,4.52711538461539,4.7875,5.07153846153846,5.37923076923077,5.71057692307692,6.06557692307692,6.44423076923077,6.84653846153846,7.2725,7.72211538461538],[7.34346153846154,6.89384615384615,6.46788461538462,6.06557692307692,5.68692307692308,5.33192307692308,5.00057692307692,4.69288461538462,4.40884615384615,4.14846153846154,3.91173076923077,3.69865384615385,3.50923076923077,3.34346153846154,3.20153846153846,3.08326923076923,2.98865384615385,2.91769230769231,2.87038461538462,2.84673076923077,2.84673076923077,2.87038461538462,2.91769230769231,2.98865384615385,3.08326923076923,3.20153846153846,3.34346153846154,3.50923076923077,3.69865384615385,3.91173076923077,4.14846153846154,4.40884615384615,4.69288461538462,5.00057692307692,5.33192307692308,5.68692307692308,6.06557692307692,6.46788461538462,6.89384615384615,7.34346153846154],[6.98846153846154,6.53884615384615,6.11288461538462,5.71057692307692,5.33192307692308,4.97692307692308,4.64557692307692,4.33788461538462,4.05384615384615,3.79346153846154,3.55673076923077,3.34365384615385,3.15423076923077,2.98846153846154,2.84653846153846,2.72826923076923,2.63365384615385,2.56269230769231,2.51538461538462,2.49173076923077,2.49173076923077,2.51538461538462,2.56269230769231,2.63365384615385,2.72826923076923,2.84653846153846,2.98846153846154,3.15423076923077,3.34365384615385,3.55673076923077,3.79346153846154,4.05384615384615,4.33788461538462,4.64557692307693,4.97692307692308,5.33192307692308,5.71057692307692,6.11288461538462,6.53884615384615,6.98846153846154],[6.65711538461538,6.2075,5.78153846153846,5.37923076923077,5.00057692307692,4.64557692307692,4.31423076923077,4.00653846153846,3.7225,3.46211538461538,3.22538461538461,3.01230769230769,2.82288461538461,2.65711538461538,2.51519230769231,2.39692307692308,2.30230769230769,2.23134615384615,2.18403846153846,2.16038461538461,2.16038461538461,2.18403846153846,2.23134615384615,2.30230769230769,2.39692307692308,2.51519230769231,2.65711538461538,2.82288461538462,3.01230769230769,3.22538461538461,3.46211538461538,3.7225,4.00653846153846,4.31423076923077,4.64557692307692,5.00057692307692,5.37923076923077,5.78153846153846,6.2075,6.65711538461538],[6.34942307692308,5.89980769230769,5.47384615384615,5.07153846153846,4.69288461538462,4.33788461538462,4.00653846153846,3.69884615384615,3.41480769230769,3.15442307692308,2.91769230769231,2.70461538461538,2.51519230769231,2.34942307692308,2.2075,2.08923076923077,1.99461538461538,1.92365384615385,1.87634615384615,1.85269230769231,1.85269230769231,1.87634615384615,1.92365384615385,1.99461538461538,2.08923076923077,2.2075,2.34942307692308,2.51519230769231,2.70461538461539,2.91769230769231,3.15442307692308,3.41480769230769,3.69884615384615,4.00653846153846,4.33788461538462,4.69288461538462,5.07153846153846,5.47384615384615,5.89980769230769,6.34942307692308],[6.06538461538462,5.61576923076923,5.18980769230769,4.7875,4.40884615384615,4.05384615384615,3.7225,3.41480769230769,3.13076923076923,2.87038461538462,2.63365384615385,2.42057692307692,2.23115384615385,2.06538461538462,1.92346153846154,1.80519230769231,1.71057692307692,1.63961538461538,1.59230769230769,1.56865384615385,1.56865384615385,1.59230769230769,1.63961538461538,1.71057692307692,1.80519230769231,1.92346153846154,2.06538461538462,2.23115384615385,2.42057692307692,2.63365384615385,2.87038461538462,3.13076923076923,3.41480769230769,3.7225,4.05384615384615,4.40884615384615,4.7875,5.18980769230769,5.61576923076923,6.06538461538462],[5.805,5.35538461538462,4.92942307692308,4.52711538461539,4.14846153846154,3.79346153846154,3.46211538461538,3.15442307692308,2.87038461538462,2.61,2.37326923076923,2.16019230769231,1.97076923076923,1.805,1.66307692307692,1.54480769230769,1.45019230769231,1.37923076923077,1.33192307692308,1.30826923076923,1.30826923076923,1.33192307692308,1.37923076923077,1.45019230769231,1.54480769230769,1.66307692307692,1.805,1.97076923076923,2.16019230769231,2.37326923076923,2.61,2.87038461538462,3.15442307692308,3.46211538461539,3.79346153846154,4.14846153846154,4.52711538461538,4.92942307692308,5.35538461538462,5.805],[5.56826923076923,5.11865384615385,4.69269230769231,4.29038461538462,3.91173076923077,3.55673076923077,3.22538461538461,2.91769230769231,2.63365384615385,2.37326923076923,2.13653846153846,1.92346153846154,1.73403846153846,1.56826923076923,1.42634615384615,1.30807692307692,1.21346153846154,1.1425,1.09519230769231,1.07153846153846,1.07153846153846,1.09519230769231,1.1425,1.21346153846154,1.30807692307692,1.42634615384615,1.56826923076923,1.73403846153846,1.92346153846154,2.13653846153846,2.37326923076923,2.63365384615385,2.91769230769231,3.22538461538462,3.55673076923077,3.91173076923077,4.29038461538462,4.69269230769231,5.11865384615385,5.56826923076923],[5.35519230769231,4.90557692307692,4.47961538461539,4.07730769230769,3.69865384615385,3.34365384615385,3.01230769230769,2.70461538461538,2.42057692307692,2.16019230769231,1.92346153846154,1.71038461538461,1.52096153846154,1.35519230769231,1.21326923076923,1.095,1.00038461538461,0.929423076923077,0.882115384615384,0.858461538461538,0.858461538461538,0.882115384615384,0.929423076923077,1.00038461538462,1.095,1.21326923076923,1.35519230769231,1.52096153846154,1.71038461538462,1.92346153846154,2.16019230769231,2.42057692307692,2.70461538461538,3.01230769230769,3.34365384615385,3.69865384615385,4.07730769230769,4.47961538461538,4.90557692307692,5.35519230769231],[5.16576923076923,4.71615384615385,4.29019230769231,3.88788461538461,3.50923076923077,3.15423076923077,2.82288461538461,2.51519230769231,2.23115384615385,1.97076923076923,1.73403846153846,1.52096153846154,1.33153846153846,1.16576923076923,1.02384615384615,0.905576923076923,0.810961538461538,0.74,0.692692307692308,0.669038461538461,0.669038461538461,0.692692307692307,0.74,0.810961538461539,0.905576923076923,1.02384615384615,1.16576923076923,1.33153846153846,1.52096153846154,1.73403846153846,1.97076923076923,2.23115384615385,2.51519230769231,2.82288461538462,3.15423076923077,3.50923076923077,3.88788461538461,4.29019230769231,4.71615384615385,5.16576923076923],[5,4.55038461538462,4.12442307692308,3.72211538461538,3.34346153846154,2.98846153846154,2.65711538461538,2.34942307692308,2.06538461538462,1.805,1.56826923076923,1.35519230769231,1.16576923076923,1,0.858076923076923,0.739807692307692,0.645192307692308,0.574230769230769,0.526923076923077,0.503269230769231,0.503269230769231,0.526923076923077,0.574230769230769,0.645192307692308,0.739807692307692,0.858076923076923,1,1.16576923076923,1.35519230769231,1.56826923076923,1.805,2.06538461538462,2.34942307692308,2.65711538461539,2.98846153846154,3.34346153846154,3.72211538461538,4.12442307692308,4.55038461538462,5],[4.85807692307692,4.40846153846154,3.9825,3.58019230769231,3.20153846153846,2.84653846153846,2.51519230769231,2.2075,1.92346153846154,1.66307692307692,1.42634615384615,1.21326923076923,1.02384615384615,0.858076923076923,0.716153846153846,0.597884615384615,0.50326923076923,0.432307692307692,0.385,0.361346153846154,0.361346153846154,0.385,0.432307692307692,0.503269230769231,0.597884615384615,0.716153846153846,0.858076923076923,1.02384615384615,1.21326923076923,1.42634615384615,1.66307692307692,1.92346153846154,2.2075,2.51519230769231,2.84653846153846,3.20153846153846,3.58019230769231,3.9825,4.40846153846154,4.85807692307692],[4.73980769230769,4.29019230769231,3.86423076923077,3.46192307692308,3.08326923076923,2.72826923076923,2.39692307692308,2.08923076923077,1.80519230769231,1.54480769230769,1.30807692307692,1.095,0.905576923076923,0.739807692307692,0.597884615384615,0.479615384615384,0.385,0.314038461538461,0.266730769230769,0.243076923076923,0.243076923076923,0.266730769230769,0.314038461538461,0.385,null,0.597884615384615,0.739807692307692,0.905576923076923,1.095,1.30807692307692,1.54480769230769,1.80519230769231,2.08923076923077,2.39692307692308,2.72826923076923,3.08326923076923,3.46192307692308,null,4.29019230769231,4.73980769230769],[4.64519230769231,4.19557692307692,3.76961538461539,3.36730769230769,2.98865384615385,2.63365384615385,2.30230769230769,1.99461538461538,1.71057692307692,1.45019230769231,1.21346153846154,1.00038461538461,0.810961538461538,0.645192307692308,0.50326923076923,0.385,0.290384615384615,0.219423076923077,0.172115384615385,0.148461538461538,0.148461538461538,0.172115384615385,0.219423076923077,0.290384615384615,0.385,0.503269230769231,0.645192307692308,0.810961538461539,1.00038461538462,1.21346153846154,1.45019230769231,1.71057692307692,1.99461538461539,2.30230769230769,2.63365384615385,2.98865384615385,3.36730769230769,3.76961538461538,4.19557692307693,4.64519230769231],[4.57423076923077,4.12461538461539,3.69865384615385,3.29634615384615,2.91769230769231,2.56269230769231,2.23134615384615,1.92365384615385,1.63961538461538,1.37923076923077,1.1425,0.929423076923077,0.74,0.574230769230769,0.432307692307692,0.314038461538461,0.219423076923077,0.148461538461538,0.101153846153846,0.0775,0.0775,0.101153846153846,0.148461538461539,0.219423076923077,0.314038461538462,0.432307692307692,0.574230769230769,0.74,0.929423076923078,1.1425,1.37923076923077,1.63961538461538,1.92365384615385,2.23134615384616,2.56269230769231,2.91769230769231,3.29634615384615,3.69865384615385,4.12461538461539,4.57423076923077],[4.52692307692308,4.07730769230769,3.65134615384615,3.24903846153846,2.87038461538462,2.51538461538462,2.18403846153846,1.87634615384615,1.59230769230769,1.33192307692308,1.09519230769231,0.882115384615384,0.692692307692308,0.526923076923077,0.385,0.266730769230769,0.172115384615385,0.101153846153846,0.0538461538461539,0.0301923076923077,0.0301923076923077,0.0538461538461539,0.101153846153846,0.172115384615385,0.266730769230769,0.385,0.526923076923077,0.692692307692308,0.882115384615386,1.09519230769231,1.33192307692308,1.59230769230769,1.87634615384615,2.18403846153846,2.51538461538462,2.87038461538462,3.24903846153846,3.65134615384615,4.07730769230769,4.52692307692308],[4.50326923076923,4.05365384615385,3.62769230769231,3.22538461538462,2.84673076923077,2.49173076923077,2.16038461538461,1.85269230769231,1.56865384615385,1.30826923076923,1.07153846153846,0.858461538461538,0.669038461538461,0.503269230769231,0.361346153846154,0.243076923076923,0.148461538461538,0.0775,0.0301923076923077,0.00653846153846149,0.00653846153846153,0.0301923076923077,0.0775000000000001,0.148461538461539,0.243076923076923,0.361346153846154,0.503269230769231,0.669038461538462,0.858461538461539,1.07153846153846,1.30826923076923,1.56865384615385,1.85269230769231,2.16038461538462,2.49173076923077,2.84673076923077,3.22538461538461,3.62769230769231,4.05365384615385,4.50326923076923],[4.50326923076923,4.05365384615385,3.62769230769231,3.22538461538462,2.84673076923077,2.49173076923077,2.16038461538461,1.85269230769231,1.56865384615385,1.30826923076923,1.07153846153846,0.858461538461538,0.669038461538461,0.503269230769231,0.361346153846154,0.243076923076923,0.148461538461538,0.0775,0.0301923076923077,0.00653846153846153,0.00653846153846156,0.0301923076923077,0.0775000000000002,0.148461538461539,0.243076923076923,0.361346153846154,0.503269230769231,0.669038461538462,0.858461538461539,1.07153846153846,1.30826923076923,1.56865384615385,1.85269230769231,2.16038461538462,2.49173076923077,2.84673076923077,3.22538461538462,3.62769230769231,4.05365384615385,4.50326923076923],[4.52692307692308,4.07730769230769,3.65134615384615,3.24903846153846,2.87038461538462,2.51538461538462,2.18403846153846,1.87634615384615,1.59230769230769,1.33192307692308,1.09519230769231,0.882115384615384,0.692692307692308,0.526923076923077,0.385,0.266730769230769,0.172115384615385,0.101153846153846,0.0538461538461539,0.0301923076923077,0.0301923076923077,0.0538461538461539,0.101153846153846,0.172115384615385,0.266730769230769,0.385,0.526923076923077,0.692692307692308,0.882115384615386,1.09519230769231,1.33192307692308,1.59230769230769,1.87634615384615,2.18403846153846,2.51538461538462,2.87038461538462,3.24903846153846,3.65134615384615,4.07730769230769,4.52692307692308],[4.57423076923077,4.12461538461539,3.69865384615385,3.29634615384615,2.91769230769231,2.56269230769231,2.23134615384615,1.92365384615385,1.63961538461538,1.37923076923077,1.1425,0.929423076923077,0.74,0.574230769230769,0.432307692307692,0.314038461538462,0.219423076923077,0.148461538461539,0.101153846153846,0.0775000000000001,0.0775000000000002,0.101153846153846,0.148461538461539,0.219423076923077,0.314038461538462,0.432307692307693,0.574230769230769,0.740000000000001,0.929423076923078,1.1425,1.37923076923077,1.63961538461538,1.92365384615385,2.23134615384616,2.56269230769231,2.91769230769231,3.29634615384615,3.69865384615385,4.12461538461539,4.57423076923077],[4.64519230769231,4.19557692307692,3.76961538461539,3.36730769230769,2.98865384615385,2.63365384615385,2.30230769230769,1.99461538461538,1.71057692307692,1.45019230769231,1.21346153846154,1.00038461538462,0.810961538461539,0.645192307692308,0.503269230769231,0.385,0.290384615384615,0.219423076923077,0.172115384615385,0.148461538461539,0.148461538461539,0.172115384615385,0.219423076923077,0.290384615384616,0.385,0.503269230769231,0.645192307692308,0.810961538461539,1.00038461538462,1.21346153846154,1.45019230769231,1.71057692307692,1.99461538461539,2.30230769230769,2.63365384615385,2.98865384615385,3.36730769230769,3.76961538461539,4.19557692307693,4.64519230769231],[4.73980769230769,4.29019230769231,3.86423076923077,3.46192307692308,3.08326923076923,2.72826923076923,2.39692307692308,2.08923076923077,1.80519230769231,1.54480769230769,1.30807692307692,1.095,0.905576923076923,0.739807692307692,0.597884615384615,null,0.385,0.314038461538462,0.266730769230769,0.243076923076923,0.243076923076923,0.266730769230769,0.314038461538462,0.385,0.479615384615385,0.597884615384616,0.739807692307692,0.905576923076924,1.095,1.30807692307692,1.54480769230769,1.80519230769231,2.08923076923077,2.39692307692308,2.72826923076923,3.08326923076923,3.46192307692308,3.86423076923077,4.29019230769231,4.73980769230769],[4.85807692307692,4.40846153846154,3.9825,3.58019230769231,3.20153846153846,2.84653846153846,2.51519230769231,2.2075,1.92346153846154,1.66307692307692,1.42634615384615,1.21326923076923,1.02384615384615,0.858076923076923,0.716153846153846,0.597884615384615,0.503269230769231,0.432307692307692,0.385,0.361346153846154,0.361346153846154,0.385,0.432307692307693,0.503269230769231,0.597884615384616,0.716153846153846,0.858076923076923,null,1.21326923076923,1.42634615384615,1.66307692307692,1.92346153846154,2.2075,2.51519230769231,2.84653846153846,3.20153846153846,3.58019230769231,3.9825,4.40846153846154,4.85807692307692],[5,4.55038461538462,4.12442307692308,3.72211538461538,3.34346153846154,2.98846153846154,2.65711538461538,2.34942307692308,2.06538461538462,1.805,1.56826923076923,1.35519230769231,1.16576923076923,1,0.858076923076923,0.739807692307692,0.645192307692308,0.574230769230769,0.526923076923077,0.503269230769231,0.503269230769231,0.526923076923077,0.574230769230769,0.645192307692308,0.739807692307692,0.858076923076923,1,1.16576923076923,1.35519230769231,1.56826923076923,1.805,2.06538461538462,2.34942307692308,2.65711538461539,2.98846153846154,3.34346153846154,3.72211538461538,4.12442307692308,4.55038461538462,5],[5.16576923076923,4.71615384615385,4.29019230769231,3.88788461538462,3.50923076923077,3.15423076923077,2.82288461538461,2.51519230769231,2.23115384615385,1.97076923076923,1.73403846153846,1.52096153846154,1.33153846153846,1.16576923076923,1.02384615384615,0.905576923076923,0.810961538461539,0.74,0.692692307692308,0.669038461538462,0.669038461538462,0.692692307692308,0.740000000000001,0.810961538461539,0.905576923076924,null,1.16576923076923,1.33153846153846,1.52096153846154,1.73403846153846,1.97076923076923,2.23115384615385,2.51519230769231,2.82288461538462,3.15423076923077,3.50923076923077,3.88788461538462,4.29019230769231,null,5.16576923076923],[5.35519230769231,4.90557692307692,4.47961538461539,4.07730769230769,3.69865384615385,3.34365384615385,3.01230769230769,2.70461538461539,2.42057692307692,2.16019230769231,1.92346153846154,1.71038461538462,1.52096153846154,1.35519230769231,1.21326923076923,1.095,1.00038461538462,0.929423076923078,0.882115384615386,0.858461538461539,0.858461538461539,0.882115384615386,0.929423076923078,1.00038461538462,1.095,1.21326923076923,1.35519230769231,1.52096153846154,1.71038461538462,1.92346153846154,2.16019230769231,2.42057692307692,2.70461538461539,3.01230769230769,3.34365384615385,3.69865384615385,4.07730769230769,4.47961538461539,4.90557692307693,5.35519230769231],[5.56826923076923,5.11865384615385,4.69269230769231,4.29038461538462,3.91173076923077,3.55673076923077,3.22538461538461,2.91769230769231,2.63365384615385,2.37326923076923,2.13653846153846,1.92346153846154,1.73403846153846,1.56826923076923,1.42634615384615,1.30807692307692,1.21346153846154,1.1425,1.09519230769231,1.07153846153846,1.07153846153846,1.09519230769231,1.1425,1.21346153846154,1.30807692307692,1.42634615384615,1.56826923076923,1.73403846153846,1.92346153846154,2.13653846153846,2.37326923076923,2.63365384615385,2.91769230769231,3.22538461538462,3.55673076923077,3.91173076923077,4.29038461538461,4.69269230769231,5.11865384615385,5.56826923076923],[5.805,5.35538461538462,4.92942307692308,4.52711538461539,4.14846153846154,3.79346153846154,3.46211538461538,3.15442307692308,2.87038461538462,2.61,2.37326923076923,2.16019230769231,1.97076923076923,1.805,1.66307692307692,1.54480769230769,1.45019230769231,1.37923076923077,1.33192307692308,1.30826923076923,1.30826923076923,1.33192307692308,1.37923076923077,1.45019230769231,1.54480769230769,1.66307692307692,1.805,1.97076923076923,2.16019230769231,2.37326923076923,2.61,2.87038461538462,3.15442307692308,3.46211538461539,3.79346153846154,4.14846153846154,4.52711538461539,4.92942307692308,5.35538461538462,5.805],[6.06538461538462,5.61576923076923,5.18980769230769,4.7875,4.40884615384615,4.05384615384615,3.7225,3.41480769230769,3.13076923076923,2.87038461538462,2.63365384615385,2.42057692307692,2.23115384615385,2.06538461538462,1.92346153846154,1.80519230769231,1.71057692307692,1.63961538461538,1.59230769230769,1.56865384615385,1.56865384615385,1.59230769230769,1.63961538461538,1.71057692307692,1.80519230769231,1.92346153846154,2.06538461538462,2.23115384615385,2.42057692307692,2.63365384615385,2.87038461538462,3.13076923076923,3.41480769230769,3.7225,4.05384615384615,4.40884615384615,4.7875,5.18980769230769,5.61576923076923,6.06538461538462],[6.34942307692308,5.89980769230769,5.47384615384616,5.07153846153846,4.69288461538462,4.33788461538462,4.00653846153846,3.69884615384615,3.41480769230769,3.15442307692308,2.91769230769231,2.70461538461538,2.51519230769231,2.34942307692308,2.2075,2.08923076923077,1.99461538461539,1.92365384615385,1.87634615384615,1.85269230769231,1.85269230769231,1.87634615384615,1.92365384615385,1.99461538461539,2.08923076923077,2.2075,2.34942307692308,2.51519230769231,2.70461538461539,2.91769230769231,3.15442307692308,3.41480769230769,3.69884615384615,4.00653846153846,4.33788461538462,4.69288461538462,5.07153846153846,5.47384615384616,5.89980769230769,6.34942307692308],[6.65711538461539,6.2075,5.78153846153846,5.37923076923077,5.00057692307692,4.64557692307692,4.31423076923077,4.00653846153846,3.7225,3.46211538461539,3.22538461538462,3.01230769230769,2.82288461538462,2.65711538461539,2.51519230769231,2.39692307692308,2.30230769230769,2.23134615384616,2.18403846153846,2.16038461538462,2.16038461538462,2.18403846153846,2.23134615384616,2.30230769230769,2.39692307692308,2.51519230769231,2.65711538461539,2.82288461538462,3.01230769230769,3.22538461538462,3.46211538461539,3.7225,4.00653846153846,4.31423076923077,4.64557692307692,5.00057692307693,5.37923076923077,5.78153846153846,6.2075,null],[6.98846153846154,6.53884615384615,6.11288461538462,5.71057692307692,5.33192307692308,4.97692307692308,4.64557692307692,4.33788461538462,4.05384615384615,3.79346153846154,3.55673076923077,3.34365384615385,3.15423076923077,2.98846153846154,2.84653846153846,2.72826923076923,2.63365384615385,2.56269230769231,2.51538461538462,2.49173076923077,2.49173076923077,2.51538461538462,2.56269230769231,2.63365384615385,2.72826923076923,2.84653846153846,2.98846153846154,3.15423076923077,3.34365384615385,3.55673076923077,3.79346153846154,4.05384615384615,4.33788461538462,4.64557692307692,4.97692307692308,5.33192307692308,5.71057692307692,6.11288461538462,null,null],[7.34346153846154,6.89384615384616,6.46788461538462,6.06557692307692,5.68692307692308,5.33192307692308,5.00057692307692,4.69288461538462,4.40884615384615,4.14846153846154,3.91173076923077,3.69865384615385,3.50923076923077,3.34346153846154,3.20153846153846,3.08326923076923,2.98865384615385,2.91769230769231,2.87038461538462,2.84673076923077,2.84673076923077,2.87038461538462,2.91769230769231,2.98865384615385,3.08326923076923,3.20153846153846,3.34346153846154,3.50923076923077,3.69865384615385,3.91173076923077,4.14846153846154,4.40884615384615,4.69288461538462,5.00057692307693,5.33192307692308,5.68692307692308,6.06557692307692,null,null,7.34346153846154],[7.72211538461538,7.2725,6.84653846153846,6.44423076923077,6.06557692307692,5.71057692307692,5.37923076923077,5.07153846153846,4.7875,4.52711538461538,4.29038461538461,4.07730769230769,3.88788461538461,3.72211538461538,3.58019230769231,3.46192307692308,3.36730769230769,3.29634615384615,3.24903846153846,3.22538461538462,3.22538461538462,3.24903846153846,3.29634615384615,3.36730769230769,3.46192307692308,3.58019230769231,3.72211538461538,3.88788461538462,4.07730769230769,4.29038461538462,4.52711538461539,4.7875,5.07153846153846,5.37923076923077,5.71057692307692,6.06557692307692,null,null,null,7.72211538461538],[8.12442307692308,7.67480769230769,7.24884615384616,6.84653846153846,6.46788461538462,6.11288461538462,5.78153846153846,5.47384615384615,5.18980769230769,4.92942307692308,4.69269230769231,4.47961538461539,4.29019230769231,4.12442307692308,3.9825,null,3.76961538461539,3.69865384615385,3.65134615384615,3.62769230769231,3.62769230769231,3.65134615384615,3.69865384615385,3.76961538461539,3.86423076923077,3.9825,4.12442307692308,4.29019230769231,4.47961538461539,4.69269230769231,4.92942307692308,5.18980769230769,5.47384615384616,5.78153846153846,6.11288461538462,null,null,null,7.67480769230769,8.12442307692308],[8.55038461538462,8.10076923076923,7.67480769230769,7.2725,6.89384615384616,6.53884615384615,6.2075,5.89980769230769,5.61576923076923,5.35538461538462,5.11865384615385,4.90557692307692,4.71615384615385,4.55038461538462,4.40846153846154,4.29019230769231,4.19557692307692,4.12461538461539,4.07730769230769,4.05365384615385,4.05365384615385,4.07730769230769,4.12461538461539,4.19557692307692,4.29019230769231,4.40846153846154,4.55038461538462,null,4.90557692307693,5.11865384615385,5.35538461538462,5.61576923076923,5.89980769230769,null,null,null,7.2725,7.67480769230769,8.10076923076923,8.55038461538462],[9,8.55038461538462,8.12442307692308,7.72211538461538,7.34346153846154,6.98846153846154,6.65711538461538,6.34942307692308,6.06538461538462,5.805,5.56826923076923,5.35519230769231,5.16576923076923,5,4.85807692307692,4.73980769230769,4.64519230769231,4.57423076923077,4.52692307692308,4.50326923076923,4.50326923076923,4.52692307692308,4.57423076923077,4.64519230769231,4.73980769230769,4.85807692307692,5,5.16576923076923,5.35519230769231,5.56826923076923,5.805,6.06538461538462,6.34942307692308,6.65711538461539,null,null,7.72211538461538,8.12442307692308,8.55038461538462,9]],&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;frame&#34;:null},{&#34;colorbar&#34;:{&#34;title&#34;:&#34;ridge_p1$z&lt;br /&gt;ridge_p2$z&lt;br /&gt;ridge_p3$z&#34;,&#34;ticklen&#34;:2},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(68,1,84,1)&#34;],[&#34;0.0416666666666667&#34;,&#34;rgba(70,19,97,1)&#34;],[&#34;0.0833333333333333&#34;,&#34;rgba(72,32,111,1)&#34;],[&#34;0.125&#34;,&#34;rgba(71,45,122,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(68,58,128,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(64,70,135,1)&#34;],[&#34;0.25&#34;,&#34;rgba(60,82,138,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(56,93,140,1)&#34;],[&#34;0.333333333333333&#34;,&#34;rgba(49,104,142,1)&#34;],[&#34;0.375&#34;,&#34;rgba(46,114,142,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(42,123,142,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(38,133,141,1)&#34;],[&#34;0.5&#34;,&#34;rgba(37,144,140,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(33,154,138,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(39,164,133,1)&#34;],[&#34;0.625&#34;,&#34;rgba(47,174,127,1)&#34;],[&#34;0.666666666666667&#34;,&#34;rgba(53,183,121,1)&#34;],[&#34;0.708333333333333&#34;,&#34;rgba(79,191,110,1)&#34;],[&#34;0.75&#34;,&#34;rgba(98,199,98,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(119,207,85,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(147,214,70,1)&#34;],[&#34;0.875&#34;,&#34;rgba(172,220,52,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(199,225,42,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(226,228,40,1)&#34;],[&#34;1&#34;,&#34;rgba(253,231,37,1)&#34;]],&#34;showscale&#34;:false,&#34;z&#34;:[[27,25.6511538461538,24.3732692307692,23.1663461538462,22.0303846153846,20.9653846153846,19.9713461538462,19.0482692307692,18.1961538461538,17.415,16.7048076923077,16.0655769230769,15.4973076923077,15,14.5742307692308,14.2194230769231,13.9355769230769,13.7226923076923,13.5807692307692,13.5098076923077,13.5098076923077,13.5807692307692,13.7226923076923,13.9355769230769,14.2194230769231,14.5742307692308,15,15.4973076923077,16.0655769230769,16.7048076923077,17.415,18.1961538461538,19.0482692307692,19.9713461538462,20.9653846153846,22.0303846153846,23.1663461538462,24.3732692307692,25.6511538461538,27],[25.6511538461538,24.3023076923077,23.0244230769231,21.8175,20.6815384615385,19.6165384615385,18.6225,17.6994230769231,16.8473076923077,16.0661538461538,15.3559615384615,14.7167307692308,14.1484615384615,13.6511538461538,13.2253846153846,12.8705769230769,12.5867307692308,12.3738461538462,12.2319230769231,12.1609615384615,12.1609615384615,12.2319230769231,12.3738461538462,12.5867307692308,12.8705769230769,13.2253846153846,13.6511538461538,14.1484615384615,14.7167307692308,15.3559615384615,16.0661538461538,16.8473076923077,17.6994230769231,18.6225,19.6165384615385,20.6815384615385,21.8175,23.0244230769231,24.3023076923077,25.6511538461538],[24.3732692307692,23.0244230769231,21.7465384615385,20.5396153846154,19.4036538461538,18.3386538461538,17.3446153846154,16.4215384615385,15.5694230769231,14.7882692307692,14.0780769230769,13.4388461538462,12.8705769230769,12.3732692307692,11.9475,11.5926923076923,11.3088461538462,11.0959615384615,10.9540384615385,10.8830769230769,10.8830769230769,10.9540384615385,11.0959615384615,11.3088461538462,11.5926923076923,11.9475,12.3732692307692,12.8705769230769,13.4388461538462,14.0780769230769,14.7882692307692,15.5694230769231,16.4215384615385,17.3446153846154,18.3386538461538,19.4036538461539,20.5396153846154,21.7465384615385,23.0244230769231,24.3732692307692],[23.1663461538462,21.8175,20.5396153846154,19.3326923076923,18.1967307692308,17.1317307692308,16.1376923076923,15.2146153846154,14.3625,13.5813461538462,12.8711538461538,12.2319230769231,11.6636538461538,11.1663461538462,10.7405769230769,10.3857692307692,10.1019230769231,9.88903846153846,9.74711538461539,9.67615384615385,9.67615384615384,9.74711538461538,9.88903846153846,10.1019230769231,10.3857692307692,10.7405769230769,11.1663461538462,11.6636538461538,12.2319230769231,12.8711538461538,13.5813461538462,14.3625,15.2146153846154,16.1376923076923,17.1317307692308,18.1967307692308,19.3326923076923,20.5396153846154,21.8175,23.1663461538462],[22.0303846153846,20.6815384615385,19.4036538461539,18.1967307692308,17.0607692307692,15.9957692307692,15.0017307692308,14.0786538461538,13.2265384615385,12.4453846153846,11.7351923076923,11.0959615384615,10.5276923076923,10.0303846153846,9.60461538461538,9.24980769230769,8.96596153846154,8.75307692307692,8.61115384615385,8.54019230769231,8.54019230769231,8.61115384615385,8.75307692307692,8.96596153846154,9.24980769230769,9.60461538461538,10.0303846153846,10.5276923076923,11.0959615384615,11.7351923076923,12.4453846153846,13.2265384615385,14.0786538461538,15.0017307692308,15.9957692307692,17.0607692307692,18.1967307692308,19.4036538461539,20.6815384615385,22.0303846153846],[20.9653846153846,19.6165384615385,18.3386538461538,17.1317307692308,15.9957692307692,14.9307692307692,13.9367307692308,13.0136538461538,12.1615384615385,11.3803846153846,10.6701923076923,10.0309615384615,9.46269230769231,8.96538461538462,8.53961538461538,8.18480769230769,7.90096153846154,7.68807692307692,7.54615384615385,7.47519230769231,7.47519230769231,7.54615384615385,7.68807692307692,7.90096153846154,8.18480769230769,8.53961538461539,8.96538461538461,9.46269230769231,10.0309615384615,10.6701923076923,11.3803846153846,12.1615384615385,13.0136538461538,13.9367307692308,14.9307692307692,15.9957692307692,17.1317307692308,18.3386538461538,19.6165384615385,20.9653846153846],[19.9713461538462,18.6225,17.3446153846154,16.1376923076923,15.0017307692308,13.9367307692308,12.9426923076923,12.0196153846154,11.1675,10.3863461538462,9.67615384615384,9.03692307692308,8.46865384615385,7.97134615384615,7.54557692307692,7.19076923076923,6.90692307692308,6.69403846153846,6.55211538461538,6.48115384615384,6.48115384615384,6.55211538461538,6.69403846153846,6.90692307692308,7.19076923076923,7.54557692307692,7.97134615384615,8.46865384615385,9.03692307692308,9.67615384615384,10.3863461538462,11.1675,12.0196153846154,12.9426923076923,13.9367307692308,15.0017307692308,16.1376923076923,17.3446153846154,18.6225,19.9713461538462],[19.0482692307692,17.6994230769231,16.4215384615385,15.2146153846154,14.0786538461538,13.0136538461538,12.0196153846154,11.0965384615385,10.2444230769231,9.46326923076923,8.75307692307692,8.11384615384615,7.54557692307692,7.04826923076923,6.6225,6.26769230769231,5.98384615384615,5.77096153846154,5.62903846153846,5.55807692307692,5.55807692307692,5.62903846153846,5.77096153846154,5.98384615384615,6.26769230769231,6.6225,7.04826923076923,7.54557692307692,8.11384615384616,8.75307692307692,9.46326923076923,10.2444230769231,11.0965384615385,12.0196153846154,13.0136538461538,14.0786538461539,15.2146153846154,16.4215384615385,17.6994230769231,19.0482692307692],[18.1961538461538,16.8473076923077,15.5694230769231,14.3625,13.2265384615385,12.1615384615385,11.1675,10.2444230769231,9.39230769230769,8.61115384615385,7.90096153846154,7.26173076923077,6.69346153846154,6.19615384615385,5.77038461538461,5.41557692307692,5.13173076923077,4.91884615384615,4.77692307692308,4.70596153846154,4.70596153846154,4.77692307692308,4.91884615384615,5.13173076923077,5.41557692307692,5.77038461538462,6.19615384615385,6.69346153846154,7.26173076923077,7.90096153846154,8.61115384615385,9.39230769230769,10.2444230769231,11.1675,12.1615384615385,13.2265384615385,14.3625,15.5694230769231,16.8473076923077,18.1961538461538],[17.415,16.0661538461538,14.7882692307692,13.5813461538462,12.4453846153846,11.3803846153846,10.3863461538462,9.46326923076923,8.61115384615385,7.83,7.11980769230769,6.48057692307692,5.91230769230769,5.415,4.98923076923077,4.63442307692308,4.35057692307692,4.13769230769231,3.99576923076923,3.92480769230769,3.92480769230769,3.99576923076923,4.13769230769231,4.35057692307692,4.63442307692308,4.98923076923077,5.415,5.91230769230769,6.48057692307693,7.11980769230769,7.83,8.61115384615385,9.46326923076923,10.3863461538462,11.3803846153846,12.4453846153846,13.5813461538462,14.7882692307692,16.0661538461538,17.415],[16.7048076923077,15.3559615384615,14.0780769230769,12.8711538461538,11.7351923076923,10.6701923076923,9.67615384615384,8.75307692307692,7.90096153846154,7.11980769230769,6.40961538461538,5.77038461538461,5.20211538461538,4.70480769230769,4.27903846153846,3.92423076923077,3.64038461538462,3.4275,3.28557692307692,3.21461538461538,3.21461538461538,3.28557692307692,3.4275,3.64038461538462,3.92423076923077,4.27903846153846,4.70480769230769,5.20211538461539,5.77038461538462,6.40961538461538,7.11980769230769,7.90096153846154,8.75307692307692,9.67615384615385,10.6701923076923,11.7351923076923,12.8711538461538,14.0780769230769,15.3559615384615,16.7048076923077],[16.0655769230769,14.7167307692308,13.4388461538462,12.2319230769231,11.0959615384615,10.0309615384615,9.03692307692307,8.11384615384615,7.26173076923077,6.48057692307692,5.77038461538461,5.13115384615384,4.56288461538461,4.06557692307692,3.63980769230769,3.285,3.00115384615385,2.78826923076923,2.64634615384615,2.57538461538461,2.57538461538461,2.64634615384615,2.78826923076923,3.00115384615385,3.285,3.63980769230769,4.06557692307692,4.56288461538462,5.13115384615385,5.77038461538462,6.48057692307693,7.26173076923077,8.11384615384615,9.03692307692308,10.0309615384615,11.0959615384615,12.2319230769231,13.4388461538462,14.7167307692308,16.0655769230769],[15.4973076923077,14.1484615384615,12.8705769230769,11.6636538461538,10.5276923076923,9.46269230769231,8.46865384615384,7.54557692307692,6.69346153846154,5.91230769230769,5.20211538461538,4.56288461538461,3.99461538461538,3.49730769230769,3.07153846153846,2.71673076923077,2.43288461538461,2.22,2.07807692307692,2.00711538461538,2.00711538461538,2.07807692307692,2.22,2.43288461538462,2.71673076923077,3.07153846153846,3.49730769230769,3.99461538461539,4.56288461538462,5.20211538461538,5.91230769230769,6.69346153846154,7.54557692307692,8.46865384615385,9.46269230769231,10.5276923076923,11.6636538461538,12.8705769230769,14.1484615384615,15.4973076923077],[15,13.6511538461538,12.3732692307692,11.1663461538462,10.0303846153846,8.96538461538462,7.97134615384615,7.04826923076923,6.19615384615385,5.415,4.70480769230769,4.06557692307692,3.49730769230769,3,2.57423076923077,2.21942307692308,1.93557692307692,1.72269230769231,1.58076923076923,1.50980769230769,1.50980769230769,1.58076923076923,1.72269230769231,1.93557692307692,2.21942307692308,2.57423076923077,3,3.49730769230769,4.06557692307693,4.70480769230769,5.415,6.19615384615385,7.04826923076923,7.97134615384616,8.96538461538462,10.0303846153846,11.1663461538462,12.3732692307692,13.6511538461538,15],[14.5742307692308,13.2253846153846,11.9475,10.7405769230769,9.60461538461538,8.53961538461538,7.54557692307692,6.6225,5.77038461538461,4.98923076923077,4.27903846153846,3.63980769230769,3.07153846153846,2.57423076923077,2.14846153846154,1.79365384615384,1.50980769230769,1.29692307692308,1.155,1.08403846153846,1.08403846153846,1.155,1.29692307692308,1.50980769230769,1.79365384615385,2.14846153846154,2.57423076923077,3.07153846153846,3.63980769230769,4.27903846153846,4.98923076923077,5.77038461538461,6.6225,7.54557692307693,8.53961538461538,9.60461538461539,10.7405769230769,11.9475,13.2253846153846,14.5742307692308],[14.2194230769231,12.8705769230769,11.5926923076923,10.3857692307692,9.24980769230769,8.18480769230769,7.19076923076923,6.26769230769231,5.41557692307692,4.63442307692308,3.92423076923077,3.285,2.71673076923077,2.21942307692308,1.79365384615384,1.43884615384615,1.155,0.942115384615384,0.800192307692307,0.729230769230769,0.729230769230769,0.800192307692307,0.942115384615385,1.155,null,1.79365384615385,2.21942307692308,2.71673076923077,3.285,3.92423076923077,4.63442307692308,5.41557692307692,6.26769230769231,7.19076923076923,8.18480769230769,9.24980769230769,10.3857692307692,null,12.8705769230769,14.2194230769231],[13.9355769230769,12.5867307692308,11.3088461538462,10.1019230769231,8.96596153846154,7.90096153846154,6.90692307692308,5.98384615384615,5.13173076923077,4.35057692307692,3.64038461538462,3.00115384615384,2.43288461538461,1.93557692307692,1.50980769230769,1.155,0.871153846153846,0.65826923076923,0.516346153846154,0.445384615384615,0.445384615384615,0.516346153846154,0.658269230769231,0.871153846153846,1.155,1.50980769230769,1.93557692307692,2.43288461538462,3.00115384615385,3.64038461538462,4.35057692307693,5.13173076923077,5.98384615384616,6.90692307692308,7.90096153846154,8.96596153846154,10.1019230769231,11.3088461538462,12.5867307692308,13.9355769230769],[13.7226923076923,12.3738461538462,11.0959615384615,9.88903846153846,8.75307692307692,7.68807692307692,6.69403846153846,5.77096153846154,4.91884615384615,4.13769230769231,3.4275,2.78826923076923,2.22,1.72269230769231,1.29692307692308,0.942115384615384,0.65826923076923,0.445384615384615,0.303461538461539,0.2325,0.2325,0.303461538461538,0.445384615384616,0.658269230769231,0.942115384615385,1.29692307692308,1.72269230769231,2.22,2.78826923076923,3.4275,4.13769230769231,4.91884615384615,5.77096153846154,6.69403846153847,7.68807692307692,8.75307692307693,9.88903846153846,11.0959615384615,12.3738461538462,13.7226923076923],[13.5807692307692,12.2319230769231,10.9540384615385,9.74711538461538,8.61115384615385,7.54615384615385,6.55211538461538,5.62903846153846,4.77692307692308,3.99576923076923,3.28557692307692,2.64634615384615,2.07807692307692,1.58076923076923,1.155,0.800192307692307,0.516346153846154,0.303461538461538,0.161538461538462,0.0905769230769231,0.0905769230769232,0.161538461538462,0.303461538461539,0.516346153846154,0.800192307692308,1.155,1.58076923076923,2.07807692307692,2.64634615384616,3.28557692307692,3.99576923076923,4.77692307692308,5.62903846153846,6.55211538461539,7.54615384615385,8.61115384615385,9.74711538461538,10.9540384615385,12.2319230769231,13.5807692307692],[13.5098076923077,12.1609615384615,10.8830769230769,9.67615384615385,8.54019230769231,7.47519230769231,6.48115384615384,5.55807692307692,4.70596153846154,3.92480769230769,3.21461538461538,2.57538461538461,2.00711538461538,1.50980769230769,1.08403846153846,0.729230769230769,0.445384615384615,0.2325,0.0905769230769231,0.0196153846153845,0.0196153846153846,0.0905769230769231,0.2325,0.445384615384616,0.72923076923077,1.08403846153846,1.50980769230769,2.00711538461539,2.57538461538462,3.21461538461539,3.92480769230769,4.70596153846154,5.55807692307692,6.48115384615385,7.47519230769231,8.54019230769231,9.67615384615384,10.8830769230769,12.1609615384615,13.5098076923077],[13.5098076923077,12.1609615384615,10.8830769230769,9.67615384615385,8.54019230769231,7.47519230769231,6.48115384615384,5.55807692307692,4.70596153846154,3.92480769230769,3.21461538461538,2.57538461538461,2.00711538461538,1.50980769230769,1.08403846153846,0.729230769230769,0.445384615384615,0.2325,0.0905769230769232,0.0196153846153846,0.0196153846153847,0.0905769230769232,0.232500000000001,0.445384615384616,0.72923076923077,1.08403846153846,1.50980769230769,2.00711538461539,2.57538461538462,3.21461538461539,3.9248076923077,4.70596153846154,5.55807692307692,6.48115384615385,7.47519230769231,8.54019230769231,9.67615384615384,10.8830769230769,12.1609615384615,13.5098076923077],[13.5807692307692,12.2319230769231,10.9540384615385,9.74711538461538,8.61115384615385,7.54615384615385,6.55211538461538,5.62903846153846,4.77692307692308,3.99576923076923,3.28557692307692,2.64634615384615,2.07807692307692,1.58076923076923,1.155,0.800192307692307,0.516346153846154,0.303461538461538,0.161538461538462,0.0905769230769231,0.0905769230769232,0.161538461538462,0.303461538461539,0.516346153846154,0.800192307692308,1.155,1.58076923076923,2.07807692307692,2.64634615384616,3.28557692307692,3.99576923076923,4.77692307692308,5.62903846153846,6.55211538461539,7.54615384615385,8.61115384615385,9.74711538461538,10.9540384615385,12.2319230769231,13.5807692307692],[13.7226923076923,12.3738461538462,11.0959615384615,9.88903846153846,8.75307692307692,7.68807692307692,6.69403846153846,5.77096153846154,4.91884615384615,4.13769230769231,3.4275,2.78826923076923,2.22,1.72269230769231,1.29692307692308,0.942115384615385,0.658269230769231,0.445384615384616,0.303461538461539,0.2325,0.232500000000001,0.303461538461539,0.445384615384616,0.658269230769232,0.942115384615386,1.29692307692308,1.72269230769231,2.22,2.78826923076923,3.4275,4.13769230769231,4.91884615384615,5.77096153846154,6.69403846153847,7.68807692307692,8.75307692307693,9.88903846153846,11.0959615384615,12.3738461538462,13.7226923076923],[13.9355769230769,12.5867307692308,11.3088461538462,10.1019230769231,8.96596153846154,7.90096153846154,6.90692307692308,5.98384615384615,5.13173076923077,4.35057692307692,3.64038461538462,3.00115384615385,2.43288461538462,1.93557692307692,1.50980769230769,1.155,0.871153846153847,0.658269230769231,0.516346153846154,0.445384615384616,0.445384615384616,0.516346153846154,0.658269230769232,0.871153846153847,1.155,1.50980769230769,1.93557692307692,2.43288461538462,3.00115384615385,3.64038461538462,4.35057692307693,5.13173076923077,5.98384615384616,6.90692307692308,7.90096153846154,8.96596153846154,10.1019230769231,11.3088461538462,12.5867307692308,13.9355769230769],[14.2194230769231,12.8705769230769,11.5926923076923,10.3857692307692,9.24980769230769,8.18480769230769,7.19076923076923,6.26769230769231,5.41557692307692,4.63442307692308,3.92423076923077,3.285,2.71673076923077,2.21942307692308,1.79365384615385,null,1.155,0.942115384615385,0.800192307692308,0.72923076923077,0.72923076923077,0.800192307692308,0.942115384615386,1.155,1.43884615384615,1.79365384615385,2.21942307692308,2.71673076923077,3.285,3.92423076923077,4.63442307692308,5.41557692307692,6.26769230769231,7.19076923076923,8.18480769230769,9.2498076923077,10.3857692307692,11.5926923076923,12.8705769230769,14.2194230769231],[14.5742307692308,13.2253846153846,11.9475,10.7405769230769,9.60461538461538,8.53961538461539,7.54557692307692,6.6225,5.77038461538462,4.98923076923077,4.27903846153846,3.63980769230769,3.07153846153846,2.57423076923077,2.14846153846154,1.79365384615385,1.50980769230769,1.29692307692308,1.155,1.08403846153846,1.08403846153846,1.155,1.29692307692308,1.50980769230769,1.79365384615385,2.14846153846154,2.57423076923077,null,3.6398076923077,4.27903846153846,4.98923076923077,5.77038461538462,6.6225,7.54557692307693,8.53961538461539,9.60461538461539,10.7405769230769,11.9475,13.2253846153846,14.5742307692308],[15,13.6511538461538,12.3732692307692,11.1663461538462,10.0303846153846,8.96538461538462,7.97134615384615,7.04826923076923,6.19615384615385,5.415,4.70480769230769,4.06557692307692,3.49730769230769,3,2.57423076923077,2.21942307692308,1.93557692307692,1.72269230769231,1.58076923076923,1.50980769230769,1.50980769230769,1.58076923076923,1.72269230769231,1.93557692307692,2.21942307692308,2.57423076923077,3,3.49730769230769,4.06557692307693,4.70480769230769,5.415,6.19615384615385,7.04826923076923,7.97134615384616,8.96538461538462,10.0303846153846,11.1663461538462,12.3732692307692,13.6511538461538,15],[15.4973076923077,14.1484615384615,12.8705769230769,11.6636538461538,10.5276923076923,9.46269230769231,8.46865384615385,7.54557692307692,6.69346153846154,5.91230769230769,5.20211538461539,4.56288461538462,3.99461538461538,3.49730769230769,3.07153846153846,2.71673076923077,2.43288461538462,2.22,2.07807692307692,2.00711538461539,2.00711538461539,2.07807692307692,2.22,2.43288461538462,2.71673076923077,null,3.49730769230769,3.99461538461539,4.56288461538462,5.20211538461539,5.9123076923077,6.69346153846154,7.54557692307693,8.46865384615385,9.46269230769231,10.5276923076923,11.6636538461538,12.8705769230769,null,15.4973076923077],[16.0655769230769,14.7167307692308,13.4388461538462,12.2319230769231,11.0959615384615,10.0309615384615,9.03692307692308,8.11384615384616,7.26173076923077,6.48057692307693,5.77038461538462,5.13115384615385,4.56288461538462,4.06557692307693,3.63980769230769,3.285,3.00115384615385,2.78826923076923,2.64634615384616,2.57538461538462,2.57538461538462,2.64634615384616,2.78826923076923,3.00115384615385,3.285,3.63980769230769,4.06557692307693,4.56288461538462,5.13115384615385,5.77038461538462,6.48057692307693,7.26173076923077,8.11384615384616,9.03692307692308,10.0309615384615,11.0959615384615,12.2319230769231,13.4388461538462,14.7167307692308,16.0655769230769],[16.7048076923077,15.3559615384615,14.0780769230769,12.8711538461538,11.7351923076923,10.6701923076923,9.67615384615384,8.75307692307692,7.90096153846154,7.11980769230769,6.40961538461538,5.77038461538462,5.20211538461538,4.70480769230769,4.27903846153846,3.92423076923077,3.64038461538462,3.4275,3.28557692307692,3.21461538461539,3.21461538461539,3.28557692307692,3.4275,3.64038461538462,3.92423076923077,4.27903846153846,4.70480769230769,5.20211538461539,5.77038461538462,6.40961538461539,7.1198076923077,7.90096153846154,8.75307692307693,9.67615384615385,10.6701923076923,11.7351923076923,12.8711538461538,14.0780769230769,15.3559615384615,16.7048076923077],[17.415,16.0661538461538,14.7882692307692,13.5813461538462,12.4453846153846,11.3803846153846,10.3863461538462,9.46326923076923,8.61115384615385,7.83,7.11980769230769,6.48057692307693,5.91230769230769,5.415,4.98923076923077,4.63442307692308,4.35057692307693,4.13769230769231,3.99576923076923,3.92480769230769,3.9248076923077,3.99576923076923,4.13769230769231,4.35057692307693,4.63442307692308,4.98923076923077,5.415,5.9123076923077,6.48057692307693,7.1198076923077,7.83,8.61115384615385,9.46326923076923,10.3863461538462,11.3803846153846,12.4453846153846,13.5813461538462,14.7882692307692,16.0661538461539,17.415],[18.1961538461538,16.8473076923077,15.5694230769231,14.3625,13.2265384615385,12.1615384615385,11.1675,10.2444230769231,9.39230769230769,8.61115384615385,7.90096153846154,7.26173076923077,6.69346153846154,6.19615384615385,5.77038461538461,5.41557692307692,5.13173076923077,4.91884615384615,4.77692307692308,4.70596153846154,4.70596153846154,4.77692307692308,4.91884615384615,5.13173076923077,5.41557692307692,5.77038461538462,6.19615384615385,6.69346153846154,7.26173076923077,7.90096153846154,8.61115384615385,9.39230769230769,10.2444230769231,11.1675,12.1615384615385,13.2265384615385,14.3625,15.5694230769231,16.8473076923077,18.1961538461538],[19.0482692307692,17.6994230769231,16.4215384615385,15.2146153846154,14.0786538461538,13.0136538461538,12.0196153846154,11.0965384615385,10.2444230769231,9.46326923076923,8.75307692307693,8.11384615384615,7.54557692307692,7.04826923076923,6.6225,6.26769230769231,5.98384615384616,5.77096153846154,5.62903846153846,5.55807692307692,5.55807692307692,5.62903846153846,5.77096153846154,5.98384615384616,6.26769230769231,6.6225,7.04826923076923,7.54557692307693,8.11384615384616,8.75307692307693,9.46326923076924,10.2444230769231,11.0965384615385,12.0196153846154,13.0136538461538,14.0786538461539,15.2146153846154,16.4215384615385,17.6994230769231,19.0482692307692],[19.9713461538462,18.6225,17.3446153846154,16.1376923076923,15.0017307692308,13.9367307692308,12.9426923076923,12.0196153846154,11.1675,10.3863461538462,9.67615384615385,9.03692307692308,8.46865384615385,7.97134615384616,7.54557692307693,7.19076923076923,6.90692307692308,6.69403846153847,6.55211538461539,6.48115384615385,6.48115384615385,6.55211538461539,6.69403846153847,6.90692307692308,7.19076923076924,7.54557692307693,7.97134615384616,8.46865384615385,9.03692307692308,9.67615384615385,10.3863461538462,11.1675,12.0196153846154,12.9426923076923,13.9367307692308,15.0017307692308,16.1376923076923,17.3446153846154,18.6225,null],[20.9653846153846,19.6165384615385,18.3386538461538,17.1317307692308,15.9957692307692,14.9307692307692,13.9367307692308,13.0136538461538,12.1615384615385,11.3803846153846,10.6701923076923,10.0309615384615,9.46269230769231,8.96538461538462,8.53961538461538,8.18480769230769,7.90096153846154,7.68807692307692,7.54615384615385,7.47519230769231,7.47519230769231,7.54615384615385,7.68807692307692,7.90096153846154,8.18480769230769,8.53961538461539,8.96538461538462,9.46269230769231,10.0309615384615,10.6701923076923,11.3803846153846,12.1615384615385,13.0136538461538,13.9367307692308,14.9307692307692,15.9957692307692,17.1317307692308,18.3386538461538,null,null],[22.0303846153846,20.6815384615385,19.4036538461538,18.1967307692308,17.0607692307692,15.9957692307692,15.0017307692308,14.0786538461538,13.2265384615385,12.4453846153846,11.7351923076923,11.0959615384615,10.5276923076923,10.0303846153846,9.60461538461539,9.24980769230769,8.96596153846154,8.75307692307693,8.61115384615385,8.54019230769231,8.54019230769231,8.61115384615385,8.75307692307693,8.96596153846154,9.2498076923077,9.60461538461539,10.0303846153846,10.5276923076923,11.0959615384615,11.7351923076923,12.4453846153846,13.2265384615385,14.0786538461539,15.0017307692308,15.9957692307692,17.0607692307692,18.1967307692308,null,null,22.0303846153846],[23.1663461538462,21.8175,20.5396153846154,19.3326923076923,18.1967307692308,17.1317307692308,16.1376923076923,15.2146153846154,14.3625,13.5813461538462,12.8711538461538,12.2319230769231,11.6636538461538,11.1663461538462,10.7405769230769,10.3857692307692,10.1019230769231,9.88903846153846,9.74711538461538,9.67615384615385,9.67615384615385,9.74711538461538,9.88903846153846,10.1019230769231,10.3857692307692,10.7405769230769,11.1663461538462,11.6636538461538,12.2319230769231,12.8711538461538,13.5813461538462,14.3625,15.2146153846154,16.1376923076923,17.1317307692308,18.1967307692308,null,null,null,23.1663461538462],[24.3732692307692,23.0244230769231,21.7465384615385,20.5396153846154,19.4036538461538,18.3386538461538,17.3446153846154,16.4215384615385,15.5694230769231,14.7882692307692,14.0780769230769,13.4388461538462,12.8705769230769,12.3732692307692,11.9475,null,11.3088461538462,11.0959615384615,10.9540384615385,10.8830769230769,10.8830769230769,10.9540384615385,11.0959615384615,11.3088461538462,11.5926923076923,11.9475,12.3732692307692,12.8705769230769,13.4388461538462,14.0780769230769,14.7882692307692,15.5694230769231,16.4215384615385,17.3446153846154,18.3386538461538,null,null,null,23.0244230769231,24.3732692307692],[25.6511538461538,24.3023076923077,23.0244230769231,21.8175,20.6815384615385,19.6165384615385,18.6225,17.6994230769231,16.8473076923077,16.0661538461538,15.3559615384615,14.7167307692308,14.1484615384615,13.6511538461538,13.2253846153846,12.8705769230769,12.5867307692308,12.3738461538462,12.2319230769231,12.1609615384615,12.1609615384615,12.2319230769231,12.3738461538462,12.5867307692308,12.8705769230769,13.2253846153846,13.6511538461538,null,14.7167307692308,15.3559615384615,16.0661538461539,16.8473076923077,17.6994230769231,null,null,null,21.8175,23.0244230769231,24.3023076923077,25.6511538461538],[27,25.6511538461538,24.3732692307692,23.1663461538462,22.0303846153846,20.9653846153846,19.9713461538462,19.0482692307692,18.1961538461538,17.415,16.7048076923077,16.0655769230769,15.4973076923077,15,14.5742307692308,14.2194230769231,13.9355769230769,13.7226923076923,13.5807692307692,13.5098076923077,13.5098076923077,13.5807692307692,13.7226923076923,13.9355769230769,14.2194230769231,14.5742307692308,15,15.4973076923077,16.0655769230769,16.7048076923077,17.415,18.1961538461538,19.0482692307692,19.9713461538462,null,null,23.1663461538462,24.3732692307692,25.6511538461538,27]],&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;shinyEvents&#34;:[&#34;plotly_hover&#34;,&#34;plotly_click&#34;,&#34;plotly_selected&#34;,&#34;plotly_relayout&#34;,&#34;plotly_brushed&#34;,&#34;plotly_brushing&#34;,&#34;plotly_clickannotation&#34;,&#34;plotly_doubleclick&#34;,&#34;plotly_deselect&#34;,&#34;plotly_afterplot&#34;,&#34;plotly_sunburstclick&#34;],&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The goal of ridge regression is to find the optimal combination of &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights that minimizes the traditional loss function, while also accounting for the added “loss” incurred by the penalty term. Looking at the plot above, you can see that as the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights both move away from 0, the ridge penalty function shows a slow increase near 0, which becomes progressively steeper as we move away from the origin. Further, as &lt;span class=&#34;math inline&#34;&gt;\(\lambda \rightarrow \infty\)&lt;/span&gt;, the penalty function becomes steeper and steeper. Altogether, ridge regression does not prefer particular values for &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights—it only prefers for all &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights to be closer to 0.&lt;/p&gt;
&lt;div id=&#34;frequentist-ridge-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Frequentist Ridge Regression&lt;/h4&gt;
&lt;p&gt;One of the problems that arises from equation 4 is that we need to select a value for &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;, the parameter that controls how much we learn from our training data. But how should we select an optimal &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;? Of course, we could just pick a value based on our intuition, but that would likely lead to non-optimal solutions in many cases. Therefore, &lt;strong&gt;frequentist ridge regression typically relies on cross-validation (CV) to select&lt;/strong&gt; &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; (see &lt;a href=&#34;https://en.wikipedia.org/wiki/Hyperparameter_optimization&#34;&gt;here&lt;/a&gt; for more details on hyper-parameter tuning/optimization). CV proceeds by:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;generating a grid of values for our hyper-parameter (&lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;splitting the training data into k equivalently sized training sets (&lt;em&gt;k folds&lt;/em&gt;),&lt;/li&gt;
&lt;li&gt;fitting a model to k-1 folds and testing prediction accuracy on the left-out fold,&lt;/li&gt;
&lt;li&gt;repeat step 3 until each fold has been left out exactly once, and&lt;/li&gt;
&lt;li&gt;iterating steps 2-4 for each hyper-parameter in the grid defined by step 1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When we are finished, we select the value of &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; in the grid that minimizes the CV error (step 3). The R code below proceeds through the above steps, using the R &lt;code&gt;glmnet&lt;/code&gt; package to fit the model:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Penalty term values to test
lambdas &amp;lt;- 10^seq(3, -2, by = -.1)

# Fit and cross-validate
fit_ridge &amp;lt;- glmnet(x = train_scale[,-8], y = train_scale[,8], 
                    alpha = 0, lambda = lambdas, intercept = F)
cv_ridge &amp;lt;- cv.glmnet(x = train_scale[,-8], y = train_scale[,8], 
                      alpha = 0, lambda = lambdas, intercept = F, 
                      grouped = FALSE)

# Find optimal penalty term (lambda)
opt_lambda &amp;lt;- cv_ridge$lambda.min

# Generate predictions with opitmal lambda model from cross-validation
y_pred &amp;lt;- predict(fit_ridge, s = opt_lambda, newx = test_scale[,-8])

# Plot cor(predicted, actual)
qplot(x = y_pred[,1], y = test_scale[,8],
      main = paste0(&amp;quot;Frequentist Ridge Regression:\nEstimating &amp;quot;, expression(lambda), 
                    &amp;quot; with CV\nr = &amp;quot;, round(cor(test_scale[,8], y_pred[,1]), 2))) +
  #geom_point(aes(x = , y = train_scale[,8]))
  xlab(&amp;quot;Model Predicted Pr(Acceptance)&amp;quot;) +
  ylab(&amp;quot;Actual Pr(Acceptance)&amp;quot;) +
  theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig3-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Woah, much better than traditional linear regression! Before diving into these results, however, let’s first explore Bayesian ridge regression.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bayesian-ridge-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Bayesian Ridge Regression&lt;/h4&gt;
&lt;p&gt;Bayesian Ridge regression differs from the frequentist variant in only one way, and it is with how we think of the &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; penalty term. In the frequentist perspective, we showed that &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; effectively tells our model how much it is allowed to learn from the data. &lt;em&gt;In the Bayesian world, we can capture such an effect in the form of a prior distribution over our&lt;/em&gt; &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; &lt;em&gt;weights&lt;/em&gt;. To reveal the extraordinary power hiding behind this simple idea, let’s first discuss Bayesian linear regression.&lt;/p&gt;
&lt;p&gt;Bayesian models view estimation as a problem of integrating prior information with information gained from data, which we formalize using probability distributions. This differs from the frequntist view, which treats regression as an opimization problem that results in a point estimate (e.g., minimizing squared error). A Bayesian regression model takes the form of:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y_{i} | \beta_{0},\boldsymbol{x_{i}},\boldsymbol{\beta},\sigma \sim \mathcal{N}(\beta_{0} + \sum_{j=1}^{p}x_{ij}\beta_{j}, \sigma) \tag{5}\]&lt;/span&gt;
Importantly, &lt;em&gt;Bayesian models require us to specify a &lt;strong&gt;prior distribution&lt;/strong&gt; for each parameter we seek to estimate&lt;/em&gt;. Therefore, we need to specify a prior on the intercept (&lt;span class=&#34;math inline&#34;&gt;\(\beta_{0}\)&lt;/span&gt;), slopes (&lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt;), and error variance (&lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;) in equation 5. Since we are standardizing all of our predictors and outcome variable(s), we will ignore the intercept term. Then, we are left with &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;. &lt;strong&gt;Crucially, our choice of prior distribution on &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; is what determines how much information we learn from the data, analagous to the penalty term &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; used for frequentist regularization.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Like before, you can gain an intuition for this behavior by imagnining extreme cases. For example, suppose that we assumed that &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta} \sim \mathcal{U}(-\infty,+\infty)\)&lt;/span&gt;. That is, we assume that &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; can take on any real-valued number, and every value is equally likely. In this case, the mode of the posterior distribution on each &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight will be equivalent to the maximum likelihood estimate of the respective &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight, and by extention the OLS estimate under the normality assumption (see our prior &lt;a href=&#34;http://haines-lab.com/post/2018-03-24-human-choice-and-reinforcement-learning-3/&#34;&gt;post on parameter estimation&lt;/a&gt; for more details). If an unbounded uniform distribution on &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; produces the same behavior as traditional linear regression, it follows from our discussions above that it also allows us to maximally learn from the data.&lt;/p&gt;
&lt;p&gt;Now, what can we do to restrict learning in a Bayesian model? Well, we can use a prior distribution that pulls the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights toward 0 (unlike the unbounded uniform distribution), similar to the &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; penalty parameter in frequentist regularization! Specifically, specifying the following prior distribution on &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; is mathematically equivalent in expectation (see &lt;a href=&#34;https://stats.stackexchange.com/questions/163388/l2-regularization-is-equivalent-to-gaussian-prior&#34;&gt;here&lt;/a&gt;) to using the ridge penalty in the frequentist model:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\boldsymbol{\beta} \sim \mathcal{N}(0, \sigma_{\beta})\tag{6}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There are two important points that the prior distribution in equation 6 conveys:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The normal distribution places very little prior probability on large-magnitude &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights (i.e. far from 0), while placing high prior probability on small-magnitude weights (i.e. near 0), and&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta}\)&lt;/span&gt; controls how wide the normal distribution is, thus controlling the specific amount of prior probability placed on small- to large-magnitude &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Bayesian version differs most in that we jointly estimate the “penalization term” &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; in a single model, as opposed to using CV to select an optimal &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt; for frequentist regression. Because we are jointly estimating &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta}\)&lt;/span&gt; along with individual-level &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights, we can actually view Bayesian ridge regression as a simple hierarchical Bayesian model, where &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta}\)&lt;/span&gt; is interpreted as a group-level scaling parameter that is estimated from pooled information across individual &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights.&lt;/p&gt;
&lt;p&gt;Below is the Stan code that specifies the Bayesian variant of ridge regression. Note that this code is based on &lt;a href=&#34;https://osf.io/cg8fq/&#34;&gt;Erp, Oberski, &amp;amp; Mulder (2019)&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&#34;stan&#34;&gt;&lt;code&gt;data{
    int N_train;             // &amp;quot;# training observations&amp;quot;
    int N_test;              // &amp;quot;# test observations&amp;quot;
    int N_pred;              // &amp;quot;# predictor variables&amp;quot;
    vector[N_train] y_train; // &amp;quot;training outcomes&amp;quot;
    matrix[N_train, N_pred] X_train; // &amp;quot;training data&amp;quot;
    matrix[N_test, N_pred] X_test;   // &amp;quot;testing data&amp;quot;
}
parameters{
    real&amp;lt;lower=0&amp;gt; sigma;   // &amp;quot;error SD&amp;quot;
    real&amp;lt;lower=0&amp;gt; sigma_B; // &amp;quot;hierarchical SD across betas&amp;quot;
    vector[N_pred] beta;   // &amp;quot;regression beta weights&amp;quot;
}
model{
  // &amp;quot;group-level (hierarchical) SD across betas&amp;quot;
  sigma_B ~ cauchy(0, 1);
  
  // &amp;quot;model error SD&amp;quot;
  sigma ~ normal(0, 1);
  
  // &amp;quot;beta prior (provides &amp;#39;ridge&amp;#39; regularization)&amp;quot;
  beta ~ normal(0, sigma_B);
    
  // &amp;quot;model likelihood&amp;quot;
    y_train ~ normal(X_train*beta, sigma);
}
generated quantities{ 
    real y_test[N_test]; // &amp;quot;test data predictions&amp;quot;
    for(i in 1:N_test){
        y_test[i] = normal_rng(X_test[i,] * beta, sigma);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The important parts of the above code are in the &lt;code&gt;model{...}&lt;/code&gt; section. While the parameterization looks different from the frequentist model (equation 4), the behavior of the model is equivalent. In particular, we have a &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta}\)&lt;/span&gt; “penalty” term, can shrink the variation between &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights toward 0. Intuitively, as &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta} \rightarrow 0\)&lt;/span&gt;, all (&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;) weights are shrunk toward 0 (no learning from data). Conversely, as &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta} \rightarrow \infty\)&lt;/span&gt;, prior on &lt;span class=&#34;math inline&#34;&gt;\(\sigma_{\beta}\)&lt;/span&gt; becomes uniform. A uniform prior denotes no penalty at all, and we are left with traditional, non-regularized regression (albeit we get a joint posterior distribution as opposed to point estimates). It is worth noting that the mode of the resulting posterior distribution over &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; will be equivalent to the maximum likelihood estimate when the prior on &lt;span class=&#34;math inline&#34;&gt;\(\boldsymbol{\beta}\)&lt;/span&gt; is uniform (for details, see MLE/MAP estimation described in a &lt;a href=&#34;http://haines-lab.com/post/2018-03-24-human-choice-and-reinforcement-learning-3/&#34;&gt;previous post&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Now, let’s try fitting the model!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# First, prepare data for Stan
stan_dat &amp;lt;- list(N_train = nrow(train_scale),
                 N_test  = nrow(test_scale),
                 N_pred  = ncol(train_scale)-1,
                 y_train = train_scale[,8],
                 X_train = train_scale[,-8],
                 X_test  = test_scale[,-8])

# Fit the model using Stan&amp;#39;s NUTS HMC sampler
fit_bayes_ridge &amp;lt;- sampling(bayes_ridge, stan_dat, iter = 2000, 
                            warmup = 500, chains = 3, cores = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: There were 1 divergent transitions after warmup. See
## http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
## to find out why this is a problem and how to eliminate them.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Examine the pairs() plot to diagnose sampling problems&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract posterior distribution (parameters and predictions)
post_ridge &amp;lt;- rstan::extract(fit_bayes_ridge)

# Compute mean of the posterior predictive distribution over test set predictors,
# which integrates out uncertainty in parameter estimates
y_pred_bayes &amp;lt;- apply(post_ridge$y_test, 2, mean)

# Plot correlation between posterior predicted mean and actual Pr(Acceptance)
qplot(x = y_pred_bayes, y = test_scale[,8],
      main = paste0(&amp;quot;Bayesian Ridge Regression:\nEstimating &amp;quot;, expression(lambda), 
                    &amp;quot; Hierarchically\nr = &amp;quot;, round(cor(test_scale[,8], y_pred_bayes), 2))) +
    xlab(&amp;quot;Model Predicted Pr(Acceptance)&amp;quot;) +
    ylab(&amp;quot;Actual Pr(Acceptance)&amp;quot;) +
    theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig4-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;It is clear that the Bayesian ridge regression is giving results very similar (almost identical) to frequentist ridge regression as outlined above. Importantly, the Bayesian method also offers straightforward measures of uncertainty for both parameter estimates and predictions on the test data. The plot above integrates over the prediction uncertainty (i.e. integrating over the posterior predictive distribution). To really appreciate the prediction uncertainty, we compute the correlation between predicted and actual Pr(Acceptance) for each posterior sample, and then visualize the resulting distribution of correlations:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Iterate through each posterior prediction and compute cor(predicted, actual),
# which preserves uncertainty in parameter estimates
y_pred_bayes2 &amp;lt;- apply(post_ridge$y_test, 1, function(x) cor(x, test_scale[,8]))

# Plot posterior predictive distribution of cor(predicted, actual)
qplot(x = y_pred_bayes2, geom = &amp;quot;histogram&amp;quot;, bins = 50,
      xlab = &amp;quot;Correlation between\nPredicted and Actual Pr(Acceptance)&amp;quot;) +
  theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig5-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Clearly, there is good amount of uncertainty contained within the posterior predictive distribution, and the above plot shows it well. Importantly, this uncertainty reduce in proportion to how much data (i.e. observations) we have. Given that we only used 20 observations, these results are actually pretty good!&lt;/p&gt;
&lt;p&gt;Another method is to visualize the scatterplot like above, but to include prediction intervals around the predicted mean estimates for each observation in the test set:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# `bayesplot` has many convenience functions for working with posteriors
color_scheme_set(scheme = &amp;quot;darkgray&amp;quot;)
ppc_intervals(x = colMeans(post_ridge$y_test), y = test_scale[,8],
              yrep = post_ridge$y_test, prob = 0.95) +
  ggtitle(&amp;quot;95% Posterior Prediction Intervals&amp;quot;) +
  xlab(&amp;quot;Model Predicted Pr(Acceptance)&amp;quot;) +
  ylab(&amp;quot;Actual Pr(Acceptance)&amp;quot;) +
  theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig6-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Looks great! We see that the 95% posterior prediction intervals contain the actual values in virtually all cases. Importantly, this visualization also makes it clear just how much uncertainty there is for each individual observation.&lt;/p&gt;
&lt;p&gt;Next up, we will explore Traditional and Bayesian LASSO regressions, followed by a discussion of the benefits of Bayesian over frequentist regularization more broadly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;lasso-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;LASSO Regression&lt;/h3&gt;
&lt;p&gt;Now that we have covered ridge regression, LASSO regression only involves a minor revision to the loss function. Specifically, as opposed to penalizing the model based on the sum of squared &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights, we will penalize the model by the sum of the absolute value of &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\underbrace{\underset{\boldsymbol{\beta}}{argmin}\sum_{i=1}^{n}(y_{i} - \beta_{0} - \sum_{j=1}^{p}\beta_{j}x_{ij})^2}_{\text{Traditional Loss Function}} + \underbrace{\lambda\sum_{j=1}^{p}|\beta_{j}|}_{\text{LASSO Penalty}}\tag{7}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;That’s it! But what difference does this make? At this point, it is useful to visualize the effect of the LASSO penalty on &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight estimates, as we did above for the ridge penalty. As before, we are looking at penalty functions for varying settings of &lt;span class=&#34;math inline&#34;&gt;\(\lambda \in \{0, .5, 1.5\}\)&lt;/span&gt;:&lt;/p&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;1506065ae472e&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;1506065ae472e&#34;,&#34;attrs&#34;:{&#34;1506065ae472e&#34;:{&#34;showscale&#34;:false,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;z&#34;:{},&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;opacity&#34;:0.5,&#34;inherit&#34;:true},&#34;1506065ae472e.1&#34;:{&#34;showscale&#34;:false,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;z&#34;:{},&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;inherit&#34;:true},&#34;1506065ae472e.2&#34;:{&#34;showscale&#34;:false,&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;z&#34;:{},&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;inherit&#34;:true}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;scene&#34;:{&#34;xaxis&#34;:{&#34;title&#34;:&#34;Beta_1&#34;},&#34;yaxis&#34;:{&#34;title&#34;:&#34;Beta_2&#34;},&#34;zaxis&#34;:{&#34;title&#34;:&#34;Penalty&#34;}},&#34;title&#34;:&#34;LASSO Penalty Contour&#34;,&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:true},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;modeBarButtonsToAdd&#34;:[&#34;hoverclosest&#34;,&#34;hovercompare&#34;],&#34;showSendToCloud&#34;:false},&#34;data&#34;:[{&#34;colorbar&#34;:{&#34;title&#34;:&#34;lasso_p1$z&lt;br /&gt;lasso_p2$z&lt;br /&gt;lasso_p3$z&#34;,&#34;ticklen&#34;:2},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(68,1,84,1)&#34;],[&#34;0.0416666666666667&#34;,&#34;rgba(70,19,97,1)&#34;],[&#34;0.0833333333333333&#34;,&#34;rgba(72,32,111,1)&#34;],[&#34;0.125&#34;,&#34;rgba(71,45,122,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(68,58,128,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(64,70,135,1)&#34;],[&#34;0.25&#34;,&#34;rgba(60,82,138,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(56,93,140,1)&#34;],[&#34;0.333333333333333&#34;,&#34;rgba(49,104,142,1)&#34;],[&#34;0.375&#34;,&#34;rgba(46,114,142,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(42,123,142,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(38,133,141,1)&#34;],[&#34;0.5&#34;,&#34;rgba(37,144,140,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(33,154,138,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(39,164,133,1)&#34;],[&#34;0.625&#34;,&#34;rgba(47,174,127,1)&#34;],[&#34;0.666666666666667&#34;,&#34;rgba(53,183,121,1)&#34;],[&#34;0.708333333333333&#34;,&#34;rgba(79,191,110,1)&#34;],[&#34;0.75&#34;,&#34;rgba(98,199,98,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(119,207,85,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(147,214,70,1)&#34;],[&#34;0.875&#34;,&#34;rgba(172,220,52,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(199,225,42,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(226,228,40,1)&#34;],[&#34;1&#34;,&#34;rgba(253,231,37,1)&#34;]],&#34;showscale&#34;:false,&#34;z&#34;:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,null,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,null,null,null,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,0,0,0,0]],&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;opacity&#34;:0.5,&#34;frame&#34;:null},{&#34;colorbar&#34;:{&#34;title&#34;:&#34;lasso_p1$z&lt;br /&gt;lasso_p2$z&lt;br /&gt;lasso_p3$z&#34;,&#34;ticklen&#34;:2},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(68,1,84,1)&#34;],[&#34;0.0416666666666667&#34;,&#34;rgba(70,19,97,1)&#34;],[&#34;0.0833333333333333&#34;,&#34;rgba(72,32,111,1)&#34;],[&#34;0.125&#34;,&#34;rgba(71,45,122,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(68,58,128,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(64,70,135,1)&#34;],[&#34;0.25&#34;,&#34;rgba(60,82,138,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(56,93,140,1)&#34;],[&#34;0.333333333333333&#34;,&#34;rgba(49,104,142,1)&#34;],[&#34;0.375&#34;,&#34;rgba(46,114,142,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(42,123,142,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(38,133,141,1)&#34;],[&#34;0.5&#34;,&#34;rgba(37,144,140,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(33,154,138,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(39,164,133,1)&#34;],[&#34;0.625&#34;,&#34;rgba(47,174,127,1)&#34;],[&#34;0.666666666666667&#34;,&#34;rgba(53,183,121,1)&#34;],[&#34;0.708333333333333&#34;,&#34;rgba(79,191,110,1)&#34;],[&#34;0.75&#34;,&#34;rgba(98,199,98,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(119,207,85,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(147,214,70,1)&#34;],[&#34;0.875&#34;,&#34;rgba(172,220,52,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(199,225,42,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(226,228,40,1)&#34;],[&#34;1&#34;,&#34;rgba(253,231,37,1)&#34;]],&#34;showscale&#34;:false,&#34;z&#34;:[[3,2.92307692307692,2.84615384615385,2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,2.53846153846154,2.61538461538462,2.69230769230769,2.76923076923077,2.84615384615385,2.92307692307692,3],[2.92307692307692,2.84615384615385,2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846,2.53846153846154,2.61538461538462,2.69230769230769,2.76923076923077,2.84615384615385,2.92307692307692],[2.84615384615385,2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846,2.53846153846154,2.61538461538462,2.69230769230769,2.76923076923077,2.84615384615385],[2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,2.53846153846154,2.61538461538462,2.69230769230769,2.76923076923077],[2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846,2.53846153846154,2.61538461538462,2.69230769230769],[2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,2.53846153846154,2.61538461538462],[2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,2.53846153846154],[2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846],[2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538],[2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231],[2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923],[2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.692307692307692,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615],[2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.615384615384615,0.692307692307692,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308],[2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.538461538461539,0.615384615384615,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2],[1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.461538461538461,0.538461538461538,0.615384615384615,0.692307692307692,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692],[1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.384615384615384,0.384615384615385,0.461538461538461,0.538461538461539,0.615384615384615,null,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,null,1.76923076923077,1.84615384615385],[1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.384615384615385,0.307692307692307,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384615,0.692307692307692,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077],[1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.384615384615385,0.307692307692308,0.230769230769231,0.230769230769231,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384615,0.692307692307692,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769],[1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.384615384615385,0.307692307692308,0.230769230769231,0.153846153846154,0.153846153846154,0.230769230769231,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384615,0.692307692307693,0.76923076923077,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462],[1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.384615384615384,0.307692307692307,0.230769230769231,0.153846153846154,0.0769230769230766,0.0769230769230769,0.153846153846154,0.230769230769231,0.307692307692308,0.384615384615385,0.461538461538461,0.538461538461538,0.615384615384615,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154],[1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461539,0.461538461538461,0.384615384615385,0.307692307692308,0.230769230769231,0.153846153846154,0.0769230769230769,0.0769230769230771,0.153846153846154,0.230769230769231,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384616,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154],[1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.461538461538461,0.384615384615385,0.307692307692308,0.230769230769231,0.153846153846154,0.153846153846154,0.230769230769231,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384615,0.692307692307693,0.76923076923077,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462],[1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307693,0.615384615384615,0.538461538461539,0.461538461538462,0.384615384615385,0.307692307692308,0.230769230769231,0.230769230769231,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384616,0.692307692307693,0.76923076923077,0.846153846153847,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769],[1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461539,0.461538461538462,0.384615384615385,0.307692307692308,0.307692307692308,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384616,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076924,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077],[1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,null,0.615384615384615,0.538461538461539,0.461538461538462,0.384615384615385,0.384615384615385,0.461538461538462,0.538461538461539,0.615384615384616,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385],[1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461539,0.461538461538461,0.461538461538462,0.538461538461539,0.615384615384616,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076923,null,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692],[2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307692,0.615384615384615,0.538461538461538,0.538461538461539,0.615384615384615,0.692307692307693,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2],[2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.692307692307693,0.615384615384615,0.615384615384616,0.692307692307693,0.76923076923077,0.846153846153846,0.923076923076923,null,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,null,2.07692307692308],[2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461539,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.76923076923077,0.692307692307693,0.692307692307693,0.76923076923077,0.846153846153847,0.923076923076924,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615],[2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.769230769230769,0.769230769230769,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923],[2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.846153846153846,0.846153846153846,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231],[2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,0.923076923076923,0.923076923076923,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538],[2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1,1,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846],[2.53846153846154,2.46153846153846,2.38461538461539,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.07692307692308,1.07692307692308,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846,null],[2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.15384615384615,1.15384615384615,1.23076923076923,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,null,null],[2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461539,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.23076923076923,1.23076923076923,1.30769230769231,1.38461538461539,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846,null,null,2.69230769230769],[2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.30769230769231,1.30769230769231,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,null,null,null,2.76923076923077],[2.84615384615385,2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,null,1.61538461538462,1.53846153846154,1.46153846153846,1.38461538461538,1.38461538461538,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,2.46153846153846,null,null,null,2.76923076923077,2.84615384615385],[2.92307692307692,2.84615384615385,2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.46153846153846,1.46153846153846,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,null,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461539,null,null,null,2.69230769230769,2.76923076923077,2.84615384615385,2.92307692307692],[3,2.92307692307692,2.84615384615385,2.76923076923077,2.69230769230769,2.61538461538462,2.53846153846154,2.46153846153846,2.38461538461538,2.30769230769231,2.23076923076923,2.15384615384615,2.07692307692308,2,1.92307692307692,1.84615384615385,1.76923076923077,1.69230769230769,1.61538461538462,1.53846153846154,1.53846153846154,1.61538461538462,1.69230769230769,1.76923076923077,1.84615384615385,1.92307692307692,2,2.07692307692308,2.15384615384615,2.23076923076923,2.30769230769231,2.38461538461538,2.46153846153846,2.53846153846154,null,null,2.76923076923077,2.84615384615385,2.92307692307692,3]],&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;frame&#34;:null},{&#34;colorbar&#34;:{&#34;title&#34;:&#34;lasso_p1$z&lt;br /&gt;lasso_p2$z&lt;br /&gt;lasso_p3$z&#34;,&#34;ticklen&#34;:2},&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(68,1,84,1)&#34;],[&#34;0.0416666666666667&#34;,&#34;rgba(70,19,97,1)&#34;],[&#34;0.0833333333333333&#34;,&#34;rgba(72,32,111,1)&#34;],[&#34;0.125&#34;,&#34;rgba(71,45,122,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(68,58,128,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(64,70,135,1)&#34;],[&#34;0.25&#34;,&#34;rgba(60,82,138,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(56,93,140,1)&#34;],[&#34;0.333333333333333&#34;,&#34;rgba(49,104,142,1)&#34;],[&#34;0.375&#34;,&#34;rgba(46,114,142,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(42,123,142,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(38,133,141,1)&#34;],[&#34;0.5&#34;,&#34;rgba(37,144,140,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(33,154,138,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(39,164,133,1)&#34;],[&#34;0.625&#34;,&#34;rgba(47,174,127,1)&#34;],[&#34;0.666666666666667&#34;,&#34;rgba(53,183,121,1)&#34;],[&#34;0.708333333333333&#34;,&#34;rgba(79,191,110,1)&#34;],[&#34;0.75&#34;,&#34;rgba(98,199,98,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(119,207,85,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(147,214,70,1)&#34;],[&#34;0.875&#34;,&#34;rgba(172,220,52,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(199,225,42,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(226,228,40,1)&#34;],[&#34;1&#34;,&#34;rgba(253,231,37,1)&#34;]],&#34;showscale&#34;:false,&#34;z&#34;:[[9,8.76923076923077,8.53846153846154,8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,7.61538461538462,7.84615384615385,8.07692307692308,8.30769230769231,8.53846153846154,8.76923076923077,9],[8.76923076923077,8.53846153846154,8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538462,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461538,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,7.61538461538461,7.84615384615385,8.07692307692308,8.30769230769231,8.53846153846154,8.76923076923077],[8.53846153846154,8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,7.38461538461539,7.61538461538462,7.84615384615385,8.07692307692308,8.30769230769231,8.53846153846154],[8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538461,7.38461538461538,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,7.61538461538461,7.84615384615385,8.07692307692308,8.30769230769231],[8.07692307692308,7.84615384615385,7.61538461538462,7.38461538461538,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,7.38461538461538,7.61538461538461,7.84615384615385,8.07692307692308],[7.84615384615385,7.61538461538462,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,7.61538461538462,7.84615384615385],[7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,7.61538461538461],[7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461538,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539],[7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615],[6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692],[6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769],[6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846],[6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461538,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923],[6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6],[5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.38461538461538,1.61538461538461,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077],[5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.15384615384615,1.15384615384615,1.38461538461538,1.61538461538462,1.84615384615385,null,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461538,4.61538461538462,4.84615384615385,null,5.30769230769231,5.53846153846154],[5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.15384615384615,0.923076923076922,0.923076923076923,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231],[5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.15384615384615,0.923076923076923,0.692307692307692,0.692307692307693,0.923076923076923,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461538,4.61538461538462,4.84615384615385,5.07692307692308],[4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.15384615384615,0.923076923076923,0.692307692307693,0.461538461538461,0.461538461538462,0.692307692307693,0.923076923076924,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385],[4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.15384615384615,0.923076923076922,0.692307692307692,0.461538461538461,0.23076923076923,0.230769230769231,0.461538461538461,0.692307692307693,0.923076923076923,1.15384615384615,1.38461538461538,1.61538461538461,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538461],[4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538462,1.38461538461538,1.15384615384615,0.923076923076923,0.692307692307693,0.461538461538462,0.230769230769231,0.230769230769231,0.461538461538462,0.692307692307693,0.923076923076924,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462],[4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.38461538461538,1.15384615384615,0.923076923076923,0.692307692307693,0.461538461538461,0.461538461538462,0.692307692307693,0.923076923076924,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385],[5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538462,1.38461538461539,1.15384615384615,0.923076923076924,0.692307692307693,0.692307692307693,0.923076923076924,1.15384615384616,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308],[5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384616,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538462,1.38461538461539,1.15384615384615,0.923076923076923,0.923076923076924,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231],[5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,null,1.84615384615385,1.61538461538462,1.38461538461539,1.15384615384615,1.15384615384615,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154],[5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538462,1.38461538461538,1.38461538461539,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,null,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077],[6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.61538461538461,1.61538461538462,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6],[6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,1.84615384615385,1.84615384615385,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,null,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,null,6.23076923076923],[6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.07692307692308,2.07692307692308,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307693,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846],[6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.30769230769231,2.30769230769231,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769],[6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384616,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.53846153846154,2.53846153846154,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692],[7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,2.76923076923077,2.76923076923077,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615],[7.38461538461539,7.15384615384616,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3,3,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,7.38461538461539],[7.61538461538462,7.38461538461539,7.15384615384616,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.23076923076923,3.23076923076923,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,7.38461538461539,null],[7.84615384615385,7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.69230769230769,3.46153846153846,3.46153846153846,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538461,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,null,null],[8.07692307692308,7.84615384615385,7.61538461538462,7.38461538461539,7.15384615384616,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,3.92307692307692,3.69230769230769,3.69230769230769,3.92307692307692,4.15384615384616,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,7.38461538461539,null,null,8.07692307692308],[8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.38461538461538,4.15384615384615,3.92307692307692,3.92307692307692,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,null,null,null,8.30769230769231],[8.53846153846154,8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,null,4.84615384615385,4.61538461538462,4.38461538461539,4.15384615384615,4.15384615384615,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,7.38461538461539,null,null,null,8.30769230769231,8.53846153846154],[8.76923076923077,8.53846153846154,8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538462,7.38461538461539,7.15384615384616,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538462,4.38461538461539,4.38461538461539,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,null,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384616,null,null,null,8.07692307692308,8.30769230769231,8.53846153846154,8.76923076923077],[9,8.76923076923077,8.53846153846154,8.30769230769231,8.07692307692308,7.84615384615385,7.61538461538461,7.38461538461539,7.15384615384615,6.92307692307692,6.69230769230769,6.46153846153846,6.23076923076923,6,5.76923076923077,5.53846153846154,5.30769230769231,5.07692307692308,4.84615384615385,4.61538461538461,4.61538461538462,4.84615384615385,5.07692307692308,5.30769230769231,5.53846153846154,5.76923076923077,6,6.23076923076923,6.46153846153846,6.69230769230769,6.92307692307692,7.15384615384615,7.38461538461539,7.61538461538462,null,null,8.30769230769231,8.53846153846154,8.76923076923077,9]],&#34;type&#34;:&#34;surface&#34;,&#34;x&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;y&#34;:[-3,-2.84615384615385,-2.69230769230769,-2.53846153846154,-2.38461538461538,-2.23076923076923,-2.07692307692308,-1.92307692307692,-1.76923076923077,-1.61538461538462,-1.46153846153846,-1.30769230769231,-1.15384615384615,-1,-0.846153846153846,-0.692307692307692,-0.538461538461538,-0.384615384615385,-0.230769230769231,-0.0769230769230766,0.0769230769230771,0.230769230769231,0.384615384615385,0.538461538461539,0.692307692307693,0.846153846153846,1,1.15384615384615,1.30769230769231,1.46153846153846,1.61538461538462,1.76923076923077,1.92307692307692,2.07692307692308,2.23076923076923,2.38461538461539,2.53846153846154,2.69230769230769,2.84615384615385,3],&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;shinyEvents&#34;:[&#34;plotly_hover&#34;,&#34;plotly_click&#34;,&#34;plotly_selected&#34;,&#34;plotly_relayout&#34;,&#34;plotly_brushed&#34;,&#34;plotly_brushing&#34;,&#34;plotly_clickannotation&#34;,&#34;plotly_doubleclick&#34;,&#34;plotly_deselect&#34;,&#34;plotly_afterplot&#34;,&#34;plotly_sunburstclick&#34;],&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Interesting! We can see here that unlike for the ridge penalty, there are sharp corners in the geometry, which correspond to when either &lt;span class=&#34;math inline&#34;&gt;\(\beta_{1}\)&lt;/span&gt; or &lt;span class=&#34;math inline&#34;&gt;\(\beta_{2}\)&lt;/span&gt; equal 0. Further, the LASSO penalty shows a linear increase as we move away from the origin. Together, the sharp corners on 0-valued &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights and the linear increase in penalty make the LASSO penalty favor solutions that set one (or more) &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights to exactly 0.&lt;/p&gt;
&lt;div id=&#34;frequentist-lasso-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Frequentist LASSO Regression&lt;/h4&gt;
&lt;p&gt;The code below is very similar to what we had for traditional ridge regression, except that we will set &lt;span class=&#34;math inline&#34;&gt;\(\alpha = 1\)&lt;/span&gt; as opposed to &lt;span class=&#34;math inline&#34;&gt;\(\alpha = 0\)&lt;/span&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Scale training data (get rid of ID)
train_scale &amp;lt;- scale(train_dat[,2:9])

# Penalty term values to test
lambdas &amp;lt;- 10^seq(3, -2, by = -.1)

# Fit and cross-validate
fit_lasso &amp;lt;- glmnet(x = train_scale[,-8], y = train_scale[,8], 
                    alpha = 1, lambda = lambdas, intercept = F)
cv_lasso &amp;lt;- cv.glmnet(x = train_scale[,-8], y = train_scale[,8], 
                      alpha = 1, lambda = lambdas, intercept = F, 
                      grouped = FALSE)

# Find optimal penalty term (lambda)
opt_lambda_lasso &amp;lt;- cv_lasso$lambda.min

# Generate predictions on the test set
y_pred_lasso &amp;lt;- predict(fit_lasso, s = opt_lambda_lasso, newx = test_scale[,-8])

# Plot cor(predicted, actual)
qplot(x = y_pred_lasso[,1], y = test_scale[,8],
      main = paste0(&amp;quot;r = &amp;quot;, round(cor(test_scale[,8], y_pred_lasso[,1]), 2))) +
  xlab(&amp;quot;Model Predicted Pr(Acceptance)&amp;quot;) +
  ylab(&amp;quot;Actual Pr(Acceptance)&amp;quot;) +
  theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig8-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Clearly, there is not much of a performance difference between frequentist ridge and LASSO regression in this dataset. However, it is worth noting that the LASSO is often more useful when we expect the solution to be sparse—that is, we expect that many of the predictors in our model are mostly noise, and are goal is to identify more robust effects. In such a case, the LASSO does a good job of setting &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights on noisy predictors to exactly 0.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bayesian-lasso-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Bayesian LASSO Regression&lt;/h4&gt;
&lt;p&gt;Recall that for Bayesian ridge regression, we only needed to specifiy a normal prior distribution to the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights that we were aiming to regularize. For Bayesian LASSO regression, the only difference is in the form of the prior distribution. Specifically, &lt;strong&gt;setting a Laplace (i.e. double-exponential) prior on the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights is mathematically equivalent in expectation to the frequentist LASSO penalty&lt;/strong&gt; (see e.g., &lt;a href=&#34;https://stats.stackexchange.com/questions/182098/why-is-lasso-penalty-equivalent-to-the-double-exponential-laplace-prior&#34;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\boldsymbol{\beta} \sim \text{double-exponential}(0, \tau_{\beta})\tag{8}\]&lt;/span&gt;
Here, &lt;span class=&#34;math inline&#34;&gt;\(\tau_{\beta}~(0 &amp;lt; \tau_{\beta} &amp;lt; \infty)\)&lt;/span&gt; is a scale parameter that controls how peaked the prior distribution is around the center (0 in this case). As &lt;span class=&#34;math inline&#34;&gt;\(\tau_{\beta} \rightarrow 0\)&lt;/span&gt;, then the model assigns infinite weight on 0-valued &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights (i.e. no learning from data). Conversely, as &lt;span class=&#34;math inline&#34;&gt;\(\tau_{\beta} \rightarrow \infty\)&lt;/span&gt;, the prior reduces to a uniform prior, thus leading to no regularization at all (i.e traditional regression, albeit with posterior distributions rather than point estimates). It can be useful to visualize what this prior distribution looks like over a single &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight. For example, centered at 0 with &lt;span class=&#34;math inline&#34;&gt;\(\tau_{\beta} = 0.5\)&lt;/span&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;qplot(x = seq(-3, 3, .1), y = rmutil::dlaplace(seq(-3, 3, .1), 0, .5), geom = &amp;quot;line&amp;quot;) +
  ggtitle(&amp;quot;Laplace Prior with tau = 0.5&amp;quot;) +
  xlab(expression(beta[1])) +
  ylab(&amp;quot;Density&amp;quot;) +
  theme_minimal(base_size = 20) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;rmutil&amp;#39;:
##   method         from
##   print.response httr&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig9-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Compared to the ridge prior, which is a normal distribution, it is clear that the Laplace distribiution places much more probability mass directly on 0, which produces the variable selection effect specific to LASSO regression. Note also that such peakedness explains why there are sharp corners in the frequentist penalty function (see the LASSO contour plot above).&lt;/p&gt;
&lt;p&gt;Below is the Stan code that specifies this Bayesian variant of LASSO regression. Like for the Bayesian ridge regression above, this code is loosely based on &lt;a href=&#34;https://osf.io/cg8fq/&#34;&gt;Erp, Oberski, &amp;amp; Mulder (2019)&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&#34;stan&#34;&gt;&lt;code&gt;data{
    int N_train;             // &amp;quot;# training observations&amp;quot;
    int N_test;              // &amp;quot;# test observations&amp;quot;
    int N_pred;              // &amp;quot;# predictor variables&amp;quot;
    vector[N_train] y_train; // &amp;quot;training outcomes&amp;quot;
    matrix[N_train, N_pred] X_train; // &amp;quot;training data&amp;quot;
    matrix[N_test, N_pred] X_test;   // &amp;quot;testing data&amp;quot;
}
parameters{
    real&amp;lt;lower=0&amp;gt; sigma;   // &amp;quot;error SD&amp;quot;
    real&amp;lt;lower=0&amp;gt; sigma_B; // &amp;quot;(hierarchical) SD across betas&amp;quot;
    vector[N_pred] beta;   // &amp;quot;regression beta weights&amp;quot;
}
model{
  // &amp;quot;group-level (hierarchical) SD across betas&amp;quot;
  sigma_B ~ cauchy(0, 1);
  
  // &amp;quot;Prior on SD&amp;quot;
  sigma ~ normal(0, 1);
  
  // &amp;quot;beta prior (Note this is the only change!)&amp;quot;
  beta ~ double_exponential(0, sigma_B); 
    
  // &amp;quot;model likelihood&amp;quot;
    y_train ~ normal(X_train*beta, sigma);
}
generated quantities{ 
    real y_test[N_test]; // &amp;quot;test data predictions&amp;quot;
    for(i in 1:N_test){
        y_test[i] = normal_rng(X_test[i,] * beta, sigma);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Time to fit the model and visualize results:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fit the model using Stan&amp;#39;s NUTS HMC sampler
fit_bayes_lasso &amp;lt;- sampling(bayes_lasso, stan_dat, iter = 2000, 
                            warmup = 500, chains = 3, cores = 3)

# Extract posterior distribution (parameters and predictions)
post_lasso &amp;lt;- rstan::extract(fit_bayes_lasso)

# Compute mean of the posterior predictive distribution over test set predictors,
# which integrates out uncertainty in parameter estimates
y_pred_bayes_lasso &amp;lt;- apply(post_lasso$y_test, 2, mean)

# Plot correlation between posterior predicted mean and actual Pr(Acceptance)
qplot(x = y_pred_bayes_lasso, y = test_scale[,8],
      main = paste0(&amp;quot;r = &amp;quot;, round(cor(test_scale[,8], y_pred_bayes_lasso), 2))) +
    xlab(&amp;quot;Model Predicted Pr(Acceptance)&amp;quot;) +
    ylab(&amp;quot;Actual Pr(Acceptance)&amp;quot;) +
    theme_minimal(base_size = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig10-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Like before, the Bayesian LASSO is producing very similar results compared to the frequentist version.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;comparing-the-models&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Comparing the Models&lt;/h2&gt;
&lt;p&gt;So far, we have described and fit both the frequentist and Bayesian versions of ridge and LASSO regression to our training data, and we have shown that we can make pretty outstanding predictions on our held-out test set! However, we have not explored the parameters that each model has estimated. Here, we will begin to probe our models.&lt;/p&gt;
&lt;p&gt;First off, let’s look at the ridge regression model parameters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract beta weights from traditional regression model
betas_trad &amp;lt;- fit_lr$coefficients[-1]

# Extract optimal ridge beta weights from CV
betas_ridge &amp;lt;- fit_ridge$beta[,which(cv_ridge$lambda==cv_ridge$lambda.min)]

# Plot posterior distributions and frequentist point estimates
p1 &amp;lt;- mcmc_areas(as.array(fit_bayes_ridge), pars = paste0(&amp;quot;beta[&amp;quot;, 1:7, &amp;quot;]&amp;quot;), 
           prob = 0.8, prob_outer = 0.99, point_est = &amp;quot;mean&amp;quot;) +
  geom_point(x = rep(betas_ridge, 1024), y = rep(7:1, 1024), color = I(&amp;quot;#c61d29&amp;quot;), size = 2) + # rep() here is an annoying work-around to this code breaking in an update...
  geom_point(x = rep(betas_trad, 1024), y = rep(7:1, 1024), color = I(&amp;quot;black&amp;quot;), size = 2) +
  ggtitle(&amp;quot;Ridge Penalty&amp;quot;) +
  theme_minimal(base_size = 20)

# Extract optimal LASSO beta weights from CV
betas_lasso &amp;lt;- fit_lasso$beta[,which(cv_lasso$lambda==cv_lasso$lambda.min)]

# Plot posterior distributions and frequentist point estimates
p2 &amp;lt;- mcmc_areas(as.array(fit_bayes_lasso), pars = paste0(&amp;quot;beta[&amp;quot;, 1:7, &amp;quot;]&amp;quot;), 
           prob = 0.8, prob_outer = 0.99) +
  geom_point(x = rep(betas_lasso, 1024), y = rep(7:1, 1024), color = I(&amp;quot;#c61d29&amp;quot;), size = 2) +
  geom_point(x = rep(betas_trad, 1024), y = rep(7:1, 1024), color = I(&amp;quot;black&amp;quot;), size = 2) +
  ggtitle(&amp;quot;LASSO Penalty&amp;quot;) +
  theme_minimal(base_size = 20)

# Plot in grid
cowplot::plot_grid(p1, p2, ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig11-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Above, the disributions reflect the Bayesian posteriors for each &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weight (shading represents the 80% central interval, based on quantiles; bar representing the posterior mean), the red points indicate the regularized frequentist point estimates, and black points are estimates from the trditional, non-regularized frequentist regression model (shown on each plot for comparison purposes). Importantly, the traditional regression estimates are far from 0 in many cases, whereas both frequentist and Bayesian regularization estimates are much closer to 0. &lt;strong&gt;It is this conservatism that allows &lt;em&gt;biased&lt;/em&gt; estimates (from regularization/penalization) to outperform traditional models that offer &lt;em&gt;unbiased estimates&lt;/em&gt; when tested on external data&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Thus, the benefit of regularization is that we get better parameter estimates (translating to better model performance) in low and/or noisy data settings. Crucially, as we collect more and more data, the effects of regularization become less apparent. We can demonstrate this by fitting all the models above to 400—as opposed to only 20—observations and compare the coefficients to the above plot.&lt;/p&gt;
&lt;p&gt;To get started, we first go through our pre-processing steps once again:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Training data
train_dat2 &amp;lt;- grad_dat[1:400,] # Use 400 observations now

# Testing data
test_dat2 &amp;lt;- grad_dat[401:500,] # Only using last 100 now

# Scale training data (and get rid of ID)
train_scale2 &amp;lt;- scale(train_dat2[,2:9])

# Find means and SDs of training data variables
means2 &amp;lt;- attributes(train_scale2)$`scaled:center`
SDs2 &amp;lt;- attributes(train_scale2)$`scaled:scale`

# Scale test data using training data summary stats (no cheating!)
test_scale2 &amp;lt;- scale(test_dat2[,-1], center = means2, scale = SDs2)

# Prepare data for Stan
stan_dat2 &amp;lt;- list(N_train = nrow(train_scale2),
                  N_test  = nrow(test_scale2),
                  N_pred  = ncol(train_scale2)-1,
                  y_train = train_scale2[,8],
                  X_train = train_scale2[,-8],
                  X_test  = test_scale2[,-8])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, we re-fit all the models:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fit linear regression
fit_lr2 &amp;lt;- lm(Chance.of.Admit ~ ., data = as.data.frame(train_scale2))

# Fit and cross-validate ridge
fit_ridge2 &amp;lt;- glmnet(x = train_scale2[,-8], y = train_scale2[,8], 
                     alpha = 0, lambda = lambdas, intercept = F)
cv_ridge2 &amp;lt;- cv.glmnet(x = train_scale2[,-8], y = train_scale2[,8], 
                       alpha = 0, lambda = lambdas, intercept = F)

# Fit the model using Stan&amp;#39;s NUTS HMC sampler
fit_bayes_ridge2 &amp;lt;- sampling(bayes_ridge, stan_dat2, iter = 2000, 
                             warmup = 500, chains = 3, cores = 3)
# Fit and cross-validate LASSO
fit_lasso2 &amp;lt;- glmnet(x = train_scale2[,-8], y = train_scale2[,8], 
                     alpha = 1, lambda = lambdas, intercept = F)
cv_lasso2 &amp;lt;- cv.glmnet(x = train_scale2[,-8], y = train_scale2[,8], 
                       alpha = 1, lambda = lambdas, intercept = F)
# Fit the model using Stan&amp;#39;s NUTS HMC sampler
fit_bayes_lasso2 &amp;lt;- sampling(bayes_lasso, stan_dat2, iter = 2000, 
                             warmup = 500, chains = 3, cores = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And time to plot!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract beta weights from traditional regression model
betas_trad2 &amp;lt;- fit_lr2$coefficients[-1]

# Extract optimal ridge beta weights from CV
betas_ridge2 &amp;lt;- fit_ridge2$beta[,which(cv_ridge2$lambda==cv_ridge2$lambda.min)]

# Plot posterior distributions and frequentist point estimates
p3 &amp;lt;- mcmc_areas(as.array(fit_bayes_ridge2), pars = paste0(&amp;quot;beta[&amp;quot;, 1:7, &amp;quot;]&amp;quot;), 
           prob = 0.8, prob_outer = 0.99, point_est = &amp;quot;mean&amp;quot;) +
  geom_point(x = rep(betas_ridge2, 1024), y = rep(7:1, 1024), color = I(&amp;quot;#c61d29&amp;quot;), size = 2) +
  geom_point(x = rep(betas_trad2, 1024), y = rep(7:1, 1024), color = I(&amp;quot;black&amp;quot;), size = 2, alpha = .6) +
  ggtitle(&amp;quot;Ridge Penalty&amp;quot;) +
  theme_minimal(base_size = 20)

# Extract optimal LASSO beta weights from CV
betas_lasso2 &amp;lt;- fit_lasso2$beta[,which(cv_lasso2$lambda==cv_lasso2$lambda.min)]

# Plot posterior distributions and frequentist point estimates
p4 &amp;lt;- mcmc_areas(as.array(fit_bayes_lasso2), pars = paste0(&amp;quot;beta[&amp;quot;, 1:7, &amp;quot;]&amp;quot;), 
           prob = 0.8, prob_outer = 0.99) +
  geom_point(x = rep(betas_lasso2, 1024), y = rep(7:1, 1024), color = I(&amp;quot;#c61d29&amp;quot;), size = 2) +
  geom_point(x = rep(betas_trad2, 1024), y = rep(7:1, 1024), color = I(&amp;quot;black&amp;quot;), size = 2, alpha = .6) +
  ggtitle(&amp;quot;LASSO Penalty&amp;quot;) +
  theme_minimal(base_size = 20)

cowplot::plot_grid(p3, p4, ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://haines-lab.com/post/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors/2019-05-06-on-the-equivalency-between-the-lasso-ridge-regression-and-specific-bayesian-priors_files/figure-html/2019-05-06_fig12-1.svg&#34; width=&#34;672&#34; style=&#39;height: 100%; width: 100%; object-fit: contain&#39; /&gt;&lt;/p&gt;
&lt;p&gt;Woah! Unlike before, all of our estimates pretty much fall right on top of each other. Because this dataset has both: (1) many observations, and (2) a relatively high signal-to-noise ratio, both traditional and regularized regression methods offer the same conclusion when we make use the full training dataset.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;discussion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Discussion&lt;/h1&gt;
&lt;p&gt;In this post, we learned about the benefits of using regularized/penalized regression models over traditional regression. We determined that in low and/or noisy data settings, the so-called &lt;em&gt;unbiased&lt;/em&gt; estimates given by traditional regression modeling actually lead to worse-off model performance. Importantly, we learned that this occurs because being ubiased allows a model to learn a lot from the data, including learning patterns of noise. Then, we learned that &lt;em&gt;biased&lt;/em&gt; methods such as ridge and LASSO regression restrict the amount of learning that we get from data, which leads to better estimates in low and/or noisy data settings.&lt;/p&gt;
&lt;p&gt;Finally, we saw that hierarchical Bayesian models actually contain frequentist ridge and LASSO regression as a special case—namely, we can choose a prior distribution across the &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; weights that gives us a solution that is equivalent to that of the frequentist ridge or LASSO methods! Not only that, but Bayesian regression gives us a full posterior distribution for each parameter, thus circumventing problems with frequentist regularization that require the use of bootstrapping to estimate confidence intervals.&lt;/p&gt;
&lt;div id=&#34;so-what&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;So What?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Psychology&lt;/strong&gt;—and many other areas of social and behavoiral science—&lt;strong&gt;is in the midst of a replication crisis&lt;/strong&gt;. While many factors are at play here, one problem is that the methods we use to draw inference from our data are too liberal. Taken with the high measurement error, low sample sizes, and lack of mechanistic models in our research areas, we are bound to overestimate the &lt;a href=&#34;https://statmodeling.stat.columbia.edu/2004/12/29/type_1_type_2_t/&#34;&gt;magnitude (and even miss the sign&lt;/a&gt;) of effects that we are interested in if we continue to use methods that are prone to overfitting. &lt;strong&gt;&lt;em&gt;Regularization provides an elegant solution to this problem of “learning too much” from our data&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Moving forward, I hope that you consider regularizing your models! (and if you are feeling really fancy, go Bayes! Embrace the uncertainty!)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
